import{S as ep,i as tp,s as ap,k as o,a as s,w as op,q as t,I as rp,l as r,h as i,c as n,x as ip,m as l,r as a,n as h,J as U,G as e,b as Eh,y as lp,B as sp,f as np,t as hp,z as dp}from"../../../../chunks/index-a8a08db8.js";import{T as cp}from"../../../../chunks/TopSofC-31e5beff.js";/* empty css                                */const pp=""+new URL("../../../../assets/coords-8d7033f1.png",import.meta.url).href,fp=""+new URL("../../../../assets/osm-college-bf243ca2.png",import.meta.url).href,up=""+new URL("../../../../assets/dem-toronto-c547fdc3.png",import.meta.url).href,gp=""+new URL("../../../../assets/gis-layers-479f3a99.png",import.meta.url).href,mp=""+new URL("../../../../assets/qgis-blank-c49863c8.png",import.meta.url).href,vp=""+new URL("../../../../assets/qgis-layers1-2075521d.png",import.meta.url).href,yp=""+new URL("../../../../assets/qgis-centre-db6f5d95.png",import.meta.url).href,bp=""+new URL("../../../../assets/qgis-bikeshare-2fd27b69.png",import.meta.url).href,wp=""+new URL("../../../../assets/qgis-railct-8ad297f5.png",import.meta.url).href,_p=""+new URL("../../../../assets/qgis-choropleth-81a06853.png",import.meta.url).href,Ep=""+new URL("../../../../assets/qgis-buffer-9fdd946a.png",import.meta.url).href,Ip=""+new URL("../../../../assets/qgis-bufferselect-b78dff64.png",import.meta.url).href;function Sp(Zc){let oe,fe,Ne,Qe,Be,He,Ve,go,ue,mo,w,z,ft,Go,Co,ut,Ao,Ro,gt,Oo,Do,mt,Mo,zo,T,vt,Wo,xo,yt,qo,jo,L,bt,Uo,No,wt,Qo,Bo,_t,Ho,Vo,Et,Fo,Jo,It,Yo,$o,St,Ko,Xo,ge,Zo,me,er,tr,ar,d,kt,or,rr,Tt,ir,lr,re,Lt,sr,nr,Pt,hr,dr,Gt,cr,pr,Ct,fr,ur,At,gr,mr,$,vr,Rt,yr,br,Ot,wr,_r,Er,Dt,Ir,Sr,Mt,kr,Tr,ve,Ih,Lr,ye,Pr,be,Gr,Cr,Ar,we,Sh,Rr,ie,_e,Or,Dr,Ee,Mr,zr,Wr,zt,xr,qr,Wt,jr,Ur,xt,Nr,Qr,Fe,kh,Br,m,qt,Hr,Vr,jt,Fr,Jr,Ie,Th,Yr,Ut,$r,Kr,Nt,Xr,Zr,Qt,ei,ti,le,Bt,ai,oi,Ht,ri,ii,Vt,li,si,P,Ft,ni,hi,Jt,di,ci,Yt,pi,fi,$t,ui,gi,Kt,mi,vi,Xt,yi,bi,se,Zt,wi,_i,ea,Ei,Ii,ta,Si,ki,c,aa,Ti,Li,oa,Pi,Gi,ra,Ci,Ai,Je,Lh,Ri,ia,Oi,Di,N,Ye,Se,Mi,zi,Wi,$e,ke,xi,qi,ji,Ke,Te,Ui,Ni,Qi,W,Le,Bi,Hi,la,Vi,Fi,Pe,Ji,Yi,ne,$i,Ki,Xi,E,Zi,sa,el,tl,na,al,ol,ha,rl,il,da,ll,sl,ca,nl,hl,pa,dl,cl,pl,Q,fl,fa,ul,gl,ua,ml,vl,ga,yl,bl,wl,ma,_l,El,Xe,Ph,Il,va,Sl,kl,K,Tl,ya,Ll,Pl,ba,Gl,Cl,Al,x,Rl,wa,Ol,Dl,_a,Ml,zl,Ea,Wl,xl,Ia,ql,jl,S,Ul,Sa,Nl,Ql,ka,Bl,Hl,Ta,Vl,Fl,La,Jl,Yl,Pa,$l,Kl,Xl,Ze,Gh,Zl,k,es,Ga,ts,as,Ca,os,rs,Aa,is,ls,Ra,ss,ns,Oa,hs,ds,cs,et,Ch,ps,v,Da,fs,us,Ma,gs,ms,Ge,vs,Ce,ys,bs,ws,X,_s,Ae,Es,Is,Re,Ss,ks,Ts,Oe,Ls,za,Ps,Gs,Cs,tt,Ah,As,I,Rs,Wa,Os,Ds,xa,Ms,zs,qa,Ws,xs,ja,qs,js,Ua,Us,Ns,Na,Qs,Bs,Hs,De,Vs,Me,Fs,Js,Ys,ze,$s,Qa,Ks,Xs,Zs,Ba,en,tn,at,Rh,an,Z,on,Ha,rn,ln,Va,sn,nn,hn,p,Fa,dn,cn,Ja,pn,fn,Ya,un,gn,ee,ot,We,mn,vn,yn,rt,xe,bn,wn,_n,he,qe,En,In,je,Sn,kn,Tn,$a,Ln,Pn,Ue,Gn,it,Cn,An,Rn,R,On,Ka,Dn,Mn,Xa,zn,Wn,Za,xn,qn,eo,jn,Un,Nn,to,Qn,Bn,O,Hn,ao,Vn,Fn,oo,Jn,Yn,ro,$n,Kn,io,Xn,Zn,eh,lt,Oh,th,lo,ah,oh,D,rh,so,ih,lh,no,sh,nh,ho,hh,dh,co,ch,ph,fh,st,Dh,uh,po,gh,mh,vo,yo;return ue=new cp({}),{c(){oe=o("link"),fe=o("link"),Ne=o("link"),Qe=o("link"),Be=o("meta"),He=o("meta"),Ve=o("meta"),go=s(),op(ue.$$.fragment),mo=s(),w=o("main"),z=o("div"),ft=o("h1"),Go=t("(Q)GIS WORKSHOP"),Co=s(),ut=o("p"),Ao=t("For MUI2000"),Ro=s(),gt=o("p"),Oo=t("By Jeff Allen"),Do=s(),mt=o("p"),Mo=t("On January 23 & 30, 2023"),zo=s(),T=o("div"),vt=o("p"),Wo=t("We use Geographic Information Systems (GIS) to analyze, manipulate, and visualize spatial information on a computer."),xo=s(),yt=o("p"),qo=t("Why is GIS useful?"),jo=s(),L=o("ul"),bt=o("li"),Uo=t("visualize spatial data"),No=s(),wt=o("li"),Qo=t("explore spatial patterns and relationships"),Bo=s(),_t=o("li"),Ho=t("make pretty and useful maps"),Vo=s(),Et=o("li"),Fo=t('generate new data, either "by hand" or via spatial relationships from other data (e.g. through spatial queries)'),Jo=s(),It=o("li"),Yo=t("perform spatial analysis (i.e. statistical methods applied to spatial data)"),$o=s(),St=o("p"),Ko=t("GIS is often thought of as more than just a tool or piece of software. It can refer to all aspects of managing and analyzing digital spatially referenced data."),Xo=s(),ge=o("p"),Zo=t("The following provides a brief overview of GIS followed by two short tutorials for getting started with GIS, using "),me=o("a"),er=t("QGIS"),tr=t(", a free and open source desktop GIS software. The first tutorial uses data from the City of Toronto's Open Data portal. The second analyzes demographic data from the Canadian census as well as public transit data for Toronto"),ar=s(),d=o("div"),kt=o("h2"),or=t("Spatial Data"),rr=s(),Tt=o("p"),ir=t("A spatial dataset is a combination of..."),lr=s(),re=o("ul"),Lt=o("li"),sr=t("attribute data (the what)"),nr=s(),Pt=o("li"),hr=t("location data and spatial dimensions (the where)"),dr=s(),Gt=o("p"),cr=t("Spatial data, this combination of attribute and location data, can be organized and represented in a number of different formats."),pr=s(),Ct=o("p"),fr=t("For example, a city can be represented on a map via a single point with a label (e.g. based on latitude and longitude coordinates). Or a city can be represented as a polygon, based on on it's administrative boundary"),ur=s(),At=o("p"),gr=t("Importantly, there are always uncertainty about the level of accuracy, precision, and resolution of spatial data. Spatial data are abstractions of reality, and thus have some loss of information when used for visualization and analysis. Any analysis can only be as good as the available data."),mr=s(),$=o("p"),vr=t("The two most common forms of spatial data are "),Rt=o("b"),yr=t("vector"),br=t(" data and "),Ot=o("b"),wr=t("raster"),_r=t(" data."),Er=s(),Dt=o("h3"),Ir=t("Vector Data"),Sr=s(),Mt=o("p"),kr=t("Vector data uses geographic coordinates, or a series of coordinates, to create points, lines, and polygons representing real-world features."),Tr=s(),ve=o("img"),Lr=s(),ye=o("p"),Pr=t("e.g. in the map below (a screenshot of "),be=o("a"),Gr=t("OpenStreetMap"),Cr=t(") lines are used to represent roads and rail, points for retail, polygons for parks and buildings, etc."),Ar=s(),we=o("img"),Rr=s(),ie=o("p"),_e=o("a"),Or=t("GeoJSON"),Dr=t(" and the "),Ee=o("a"),Mr=t("Shapefile"),zr=t(" are probably the two most common vector data formats."),Wr=s(),zt=o("h3"),xr=t("Raster Data"),qr=s(),Wt=o("p"),jr=t("Raster data represents space as a continuous grid with equal cell sizes. Each cell contains a value pertaining to the type of feature it represents. These values can be quantitative (e.g. elevation) or categorical (e.g. type of land use). Common examples of raster data include digital elevation models (DEMs), satellite imagery, and scanned images (e.g. historical maps)."),Ur=s(),xt=o("p"),Nr=t("e.g. the map below shows a DEM for Toronto at two different scales."),Qr=s(),Fe=o("img"),Br=s(),m=o("div"),qt=o("h2"),Hr=t("GIS"),Vr=s(),jt=o("p"),Fr=t("The power of GIS software and tools is the ability to work with data stored in different layers (e.g. a layer for roads, another for buildings, and so on) in conjunction with each other. These layers can be visualized and analyzed relative to each other based on their spatial relationships."),Jr=s(),Ie=o("img"),Yr=s(),Ut=o("p"),$r=t("GIS software usually links to data stored elsewhere on a computer, rather than in a project file. If the source location of the data (i.e. which folder it's in) changes, then this will have to be updated in the GIS project. If data are edited in GIS, it will update the data in its source location."),Kr=s(),Nt=o("h3"),Xr=t("Common Tools & Software"),Zr=s(),Qt=o("p"),ei=t("Desktop GIS software"),ti=s(),le=o("ul"),Bt=o("li"),ai=t("QGIS (free and open source, can do most tasks, popular in tech and academia and non-profits)"),oi=s(),Ht=o("li"),ri=t("ArcGIS (proprietary, can do most tasks, used by big organizations)"),ii=s(),Vt=o("p"),li=t("Web-based GIS and mapping"),si=s(),P=o("ul"),Ft=o("li"),ni=t("MapBox (commercial, free basic accounts)"),hi=s(),Jt=o("li"),di=t("CARTO (commercial)"),ci=s(),Yt=o("li"),pi=t("ArcGIS Online (commercial)"),fi=s(),$t=o("li"),ui=t("D3 (free, steeper learning curve)"),gi=s(),Kt=o("li"),mi=t("Observable (free, steeper learning curve)"),vi=s(),Xt=o("p"),yi=t("GIS & Spatial analysis using code"),bi=s(),se=o("ul"),Zt=o("li"),wi=t("Python, R (for processing data, statistical analysis, making simple maps)"),_i=s(),ea=o("li"),Ei=t("PostGIS (spatial databases and queries)"),Ii=s(),ta=o("p"),Si=t("Many more!"),ki=s(),c=o("div"),aa=o("h2"),Ti=t("Tutorial (1)"),Li=s(),oa=o("h3"),Pi=t("Loading, Querying, and Visualizing Data"),Gi=s(),ra=o("p"),Ci=t(`Let's open up QGIS with a blank project. The top bars are various functions/tools for working with data. The "Browser" allows for navigating and loading datasets. The "Layers" panel will populate with each dataset that is added to the project. And the big blank square is where your map data will be visualized.`),Ai=s(),Je=o("img"),Ri=s(),ia=o("p"),Oi=t("Let's begin by finding data from the City of Toronto's Open Data portal and loading it into QGIS. This is the data we'll be looking at:"),Di=s(),N=o("ul"),Ye=o("li"),Se=o("a"),Mi=t("Business Improvement Areas (BIA)"),zi=t("."),Wi=s(),$e=o("li"),ke=o("a"),xi=t("Street Centrelines"),qi=t(" (streets, railways, trails, etc.)."),ji=s(),Ke=o("li"),Te=o("a"),Ui=t("Aerial Imagery"),Ni=t(". We'll be adding the most recent imagery layer."),Qi=s(),W=o("li"),Le=o("a"),Bi=t("Bike Share Stations"),Hi=t('. This data are a "live" '),la=o("code"),Vi=t("json"),Fi=t(" feed, I've scraped it with this "),Pe=o("a"),Ji=t("script"),Yi=t(", the result can be downloaded from "),ne=o("a"),$i=t("here"),Ki=t(` (if this link doesn't download directly, you can copy and paste the content into a text editor, or just "save as" the web page).`),Xi=s(),E=o("p"),Zi=t("Let's start by loading in the aerial imagery as a base layer. This is a raster dataset (each cell/pixel has a colour value) stored on the City's server. It can be loaded into QGIS by right-clicking on "),sa=o("i"),el=t("WMS/WMTS"),tl=t(" layer in the browser panel and adding a "),na=o("i"),al=t("New Connection"),ol=t(" or by going to "),ha=o("i"),rl=t("Layer"),il=t(", then "),da=o("i"),ll=t("Data Source Manager"),sl=t(" and navigating to "),ca=o("i"),nl=t("WMS/WMTS"),hl=t(". Once there, add in this URL "),pa=o("code"),dl=t("https://gis.toronto.ca/arcgis/rest/services/basemap/cot_ortho/MapServer/WMTS"),cl=t(" and provide a descriptive name for the layer.."),pl=s(),Q=o("p"),fl=t("Now let's add the BIA and CentreLine data. Download these from the links provided above. They can be added into QGIS either by dragging and dropping them from your file manager onto the map or layers panel. Or they can be added by "),fa=o("i"),ul=t("Layer"),gl=t(", then "),ua=o("i"),ml=t("Data Source Manager"),vl=t(", and navigating to "),ga=o("i"),yl=t('Vector"'),bl=t("."),wl=s(),ma=o("p"),_l=t("Once added, your map should look something like this:"),El=s(),Xe=o("img"),Il=s(),va=o("p"),Sl=t("The layers can be toggled on and off. They can also be dragged into different orders, the top layer on the panel will always be the layer that is shown on top on the map."),kl=s(),K=o("p"),Tl=t("We can change the colours and style of each layer by right-clicking on a layer, going to "),ya=o("i"),Ll=t("Properties"),Pl=t(", and then "),ba=o("i"),Gl=t("Symbology"),Cl=t(". In the image above, I changed the colours of the two vector layers, as well as the stroke-width of the Centreline layer."),Al=s(),x=o("p"),Rl=t("Let's explore how we can select and filter data. We'll use the Centreline layer as an example. Right-clicking they layer allows us to view it's attribute table. There is a column in here called "),wa=o("code"),Ol=t("FEATURE_00"),Dl=t(" which indicates the type of feature. Right-click and open up the "),_a=o("i"),Ml=t("Properties"),zl=t(" of the layer, then click "),Ea=o("i"),Wl=t("Source"),xl=t(", and play with filtering the data. e.g. this is a query for filtering to only show laneways "),Ia=o("code"),ql=t(`"FEATURE_00" = 'Laneway'`),jl=s(),S=o("p"),Ul=t("We can also visualize data based on values in the attribute table. First clear the above query. Then in the CentreLine "),Sa=o("i"),Nl=t("Properties"),Ql=t(", go to "),ka=o("i"),Bl=t("Symbology"),Hl=t(", then at the top, select "),Ta=o("i"),Vl=t("Categorized"),Fl=t(". Try selecting "),La=o("i"),Jl=t("FEATURE_00"),Yl=t(" again. Click "),Pa=o("i"),$l=t("Classify"),Kl=t(" at the bottom of the window. We can now quickly visualize where different features are on the map! Each category can also be styled individually be turned off and on in the layers panel."),Xl=s(),Ze=o("img"),Zl=s(),k=o("p"),es=t("Now let's learn how to visualize data based on numeric data. We can use the bike share station data for this. Download and load this dataset into QGIS. Then go to it's "),Ga=o("i"),ts=t("Properties"),as=t(", "),Ca=o("i"),os=t("Symbology"),rs=t(", then at the top, select "),Aa=o("i"),is=t("Graduated"),ls=t(". In this menu, we can color the points based on a numeric value in a column. Let's colour by the "),Ra=o("code"),ss=t("capacity"),ns=t(" column (this is the number of bikes that can be stored at each docking station). Notice the options available for classifying data (number of bins, whether to use quantiles or equal intervals, etc.). Hit "),Oa=o("i"),hs=t("Classify"),ds=t(" to update the map. Note how different classification schemes can highlight or hide different spatial patterns."),cs=s(),et=o("img"),ps=s(),v=o("div"),Da=o("h2"),fs=t("Tutorial (2)"),us=s(),Ma=o("h3"),gs=t("Table Joins and Choropleths"),ms=s(),Ge=o("p"),vs=t("Start up a new QGIS project and add in the data downloaded from "),Ce=o("a"),ys=t("here"),bs=t("."),ws=s(),X=o("p"),_s=t("First, let's look at data. We have a polygon layer which represents census tracts. These data are created by Statistics Canada to share aggregated for the Canadian census. They approximately correspond to neighbourhoods. Census tract boundary data were originally downloaded from "),Ae=o("a"),Es=t("here"),Is=t(", while attribute data were downloaded from "),Re=o("a"),Ss=t("here"),ks=t("."),Ts=s(),Oe=o("p"),Ls=t("We also have a line layer representing major transit lines in Toronto (originally sourced from Metrolinx). We can categorize line data by "),za=o("code"),Ps=t("status"),Gs=t(", using different colours or line types to display whether the transit route is existing or under construction. The screenshot below shows the result. (Also note how the map has been rotated 17.7 degrees, to horizontally align some of the features and reduce empty white space)."),Cs=s(),tt=o("img"),As=s(),I=o("p"),Rs=t("Also included is a "),Wa=o("code"),Os=t(".csv"),Ds=t(" table which contains data linked to the unique identifier, "),xa=o("code"),Ms=t("ctuid"),zs=t(", of each census tract. We can use the "),qa=o("code"),Ws=t("ctuid"),xs=t(" to join this tabular data to the spatial boundaries of census tracts. Do so by, first adding the table as a layer into QGIS. Then open up the "),ja=o("i"),qs=t("Properties"),js=t(" of the censust tract polygon layer, and go to "),Ua=o("i"),Us=t("Joins"),Ns=t(". Add a new join, using "),Na=o("code"),Qs=t("ctuid"),Bs=t(" as the source and target fields. Once complete, we can open up the attribute table and see these additional columns."),Hs=s(),De=o("p"),Vs=t("We can now visualize these polygons as a "),Me=o("a"),Fs=t("choropleth map"),Js=t(" (maps where polygons are shaded by numeric attribute values). Similar to the previous tutorial, open up the layer properties, go to symbology, and style based on graduated symbols.  It's often preferred to visualize a choropleth as a rate or a density (in terms of people per area) in order not to exaggerate counts in larger areas."),Ys=s(),ze=o("p"),$s=t("(Note that a numeric column might be imported as a string. If this is the case, to convert to a number to visualize, click on the epsilon on the top-right, and use the "),Qa=o("code"),Ks=t("to_real()"),Xs=t(" function to convert to a numeric value)."),Zs=s(),Ba=o("p"),en=t("For example, the following shows a choropleth map of the percent of people who live in low-income households by neighbourhood relative to major transit lines."),tn=s(),at=o("img"),an=s(),Z=o("p"),on=t("This map was exported by going to "),Ha=o("i"),rn=t("Project"),ln=t(", selecting "),Va=o("i"),sn=t("New Print Layout"),nn=t(", and then adding in a map view, legend, and scale bar to the blank page."),hn=s(),p=o("div"),Fa=o("h2"),dn=t("Tutorial (3)"),cn=s(),Ja=o("h3"),pn=t("Geoprocessing"),fn=s(),Ya=o("p"),un=t("Next, we're going to learn a few commonly used geoprocessing tasks, using the following data:"),gn=s(),ee=o("ul"),ot=o("li"),We=o("a"),mn=t("Street Centrelines"),vn=t(" (same as in tutorial 1)."),yn=s(),rt=o("li"),xe=o("a"),bn=t("Public Libraries"),wn=t("."),_n=s(),he=o("li"),qe=o("a"),En=t("Apartment Buildings"),In=t(" (originally geocoded from the City's apartment building registration and evaluation data on "),je=o("a"),Sn=t("Open Data Toronto"),kn=t(")."),Tn=s(),$a=o("h4"),Ln=t("Projections and re-projecting data"),Pn=s(),Ue=o("p"),Gn=t("All spatial data include location data, typically in the form of coordinates. A "),it=o("a"),Cn=t("Coordinate Reference System (CRS)"),An=t(" is a schema for referencing where features are on the earth's surface. Each CRS has specified units (e.g. degrees, metres, etc.). When working with urban data, we often want to have data in a CRS that does not distort local areas or distances, and has intuitive units (e.g. working with distances in metres rather than in degrees)."),Rn=s(),R=o("p"),On=t("To change the CRS of a vector layer, go to "),Ka=o("i"),Dn=t("Vector"),Mn=t(", "),Xa=o("i"),zn=t("Data Management Tools"),Wn=t(", then click "),Za=o("i"),xn=t("Reproject Layer"),qn=t(". Try converting the public libraries dataset into "),eo=o("code"),jn=t("NAD83 / UTM zone 17N - EPSG:26917"),Un=t(". This is a commonly used CRS for the Toronto region with units in metres."),Nn=s(),to=o("h4"),Qn=t("Buffers"),Bn=s(),O=o("p"),Hn=t("Using our reprojected layer, try creating 1km buffers around the location of public libraries. At the top of the QGIS menu, go to "),ao=o("i"),Vn=t("Vector"),Fn=t(", "),oo=o("i"),Jn=t("Geoprocessing Tools"),Yn=t(", then click "),ro=o("i"),$n=t("Buffer"),Kn=t(". Select the public libraries as the input layer, and "),io=o("code"),Xn=t("1000"),Zn=t(" metres as the distance. We can quickly see where people have easy access to public libraries in the city."),eh=s(),lt=o("img"),th=s(),lo=o("h4"),ah=t("Select by Location"),oh=s(),D=o("p"),rh=t("This can become more useful when we compare it to other layers. Let's try to find the public housing apartment buildings in Toronto that are not within 1km to a public library. We can do this first by filtering the apartment buildings dataset by their property type "),so=o("code"),ih=t(`"A_PROPERTY_TYPE"='SOCIAL HOUSING' OR "A_PROPERTY_TYPE"='TCHC'`),lh=t(". Then go to "),no=o("i"),sh=t("Vector"),nh=t(", "),ho=o("i"),hh=t("Research Tools"),dh=t(", then click "),co=o("i"),ch=t("Select by Location"),ph=t(". Here we can select the apartments that intersect the buffers. Inverting this selection will highlight the apartment buildings that are NOT within a 1km from a public library, 144 in total."),fh=s(),st=o("img"),uh=s(),po=o("h4"),gh=t("Spatial Join"),mh=s(),vo=o("p"),this.h()},l(_){const M=rp("svelte-1xs4wlw",document.head);oe=r(M,"LINK",{rel:!0,href:!0}),fe=r(M,"LINK",{rel:!0,href:!0,crossorigin:!0}),Ne=r(M,"LINK",{href:!0,rel:!0}),Qe=r(M,"LINK",{href:!0,rel:!0}),Be=r(M,"META",{name:!0,content:!0}),He=r(M,"META",{name:!0,content:!0}),Ve=r(M,"META",{name:!0,content:!0}),M.forEach(i),go=n(_),ip(ue.$$.fragment,_),mo=n(_),w=r(_,"MAIN",{});var G=l(w);z=r(G,"DIV",{id:!0});var de=l(z);ft=r(de,"H1",{});var Mh=l(ft);Go=a(Mh,"(Q)GIS WORKSHOP"),Mh.forEach(i),Co=n(de),ut=r(de,"P",{});var zh=l(ut);Ao=a(zh,"For MUI2000"),zh.forEach(i),Ro=n(de),gt=r(de,"P",{});var Wh=l(gt);Oo=a(Wh,"By Jeff Allen"),Wh.forEach(i),Do=n(de),mt=r(de,"P",{});var xh=l(mt);Mo=a(xh,"On January 23 & 30, 2023"),xh.forEach(i),de.forEach(i),zo=n(G),T=r(G,"DIV",{id:!0});var B=l(T);vt=r(B,"P",{});var qh=l(vt);Wo=a(qh,"We use Geographic Information Systems (GIS) to analyze, manipulate, and visualize spatial information on a computer."),qh.forEach(i),xo=n(B),yt=r(B,"P",{});var jh=l(yt);qo=a(jh,"Why is GIS useful?"),jh.forEach(i),jo=n(B),L=r(B,"UL",{class:!0});var H=l(L);bt=r(H,"LI",{});var Uh=l(bt);Uo=a(Uh,"visualize spatial data"),Uh.forEach(i),No=n(H),wt=r(H,"LI",{});var Nh=l(wt);Qo=a(Nh,"explore spatial patterns and relationships"),Nh.forEach(i),Bo=n(H),_t=r(H,"LI",{});var Qh=l(_t);Ho=a(Qh,"make pretty and useful maps"),Qh.forEach(i),Vo=n(H),Et=r(H,"LI",{});var Bh=l(Et);Fo=a(Bh,'generate new data, either "by hand" or via spatial relationships from other data (e.g. through spatial queries)'),Bh.forEach(i),Jo=n(H),It=r(H,"LI",{});var Hh=l(It);Yo=a(Hh,"perform spatial analysis (i.e. statistical methods applied to spatial data)"),Hh.forEach(i),H.forEach(i),$o=n(B),St=r(B,"P",{});var Vh=l(St);Ko=a(Vh,"GIS is often thought of as more than just a tool or piece of software. It can refer to all aspects of managing and analyzing digital spatially referenced data."),Vh.forEach(i),Xo=n(B),ge=r(B,"P",{});var bo=l(ge);Zo=a(bo,"The following provides a brief overview of GIS followed by two short tutorials for getting started with GIS, using "),me=r(bo,"A",{href:!0,target:!0});var Fh=l(me);er=a(Fh,"QGIS"),Fh.forEach(i),tr=a(bo,", a free and open source desktop GIS software. The first tutorial uses data from the City of Toronto's Open Data portal. The second analyzes demographic data from the Canadian census as well as public transit data for Toronto"),bo.forEach(i),B.forEach(i),ar=n(G),d=r(G,"DIV",{id:!0});var f=l(d);kt=r(f,"H2",{});var Jh=l(kt);or=a(Jh,"Spatial Data"),Jh.forEach(i),rr=n(f),Tt=r(f,"P",{});var Yh=l(Tt);ir=a(Yh,"A spatial dataset is a combination of..."),Yh.forEach(i),lr=n(f),re=r(f,"UL",{class:!0});var wo=l(re);Lt=r(wo,"LI",{});var $h=l(Lt);sr=a($h,"attribute data (the what)"),$h.forEach(i),nr=n(wo),Pt=r(wo,"LI",{});var Kh=l(Pt);hr=a(Kh,"location data and spatial dimensions (the where)"),Kh.forEach(i),wo.forEach(i),dr=n(f),Gt=r(f,"P",{});var Xh=l(Gt);cr=a(Xh,"Spatial data, this combination of attribute and location data, can be organized and represented in a number of different formats."),Xh.forEach(i),pr=n(f),Ct=r(f,"P",{});var Zh=l(Ct);fr=a(Zh,"For example, a city can be represented on a map via a single point with a label (e.g. based on latitude and longitude coordinates). Or a city can be represented as a polygon, based on on it's administrative boundary"),Zh.forEach(i),ur=n(f),At=r(f,"P",{});var ed=l(At);gr=a(ed,"Importantly, there are always uncertainty about the level of accuracy, precision, and resolution of spatial data. Spatial data are abstractions of reality, and thus have some loss of information when used for visualization and analysis. Any analysis can only be as good as the available data."),ed.forEach(i),mr=n(f),$=r(f,"P",{});var nt=l($);vr=a(nt,"The two most common forms of spatial data are "),Rt=r(nt,"B",{});var td=l(Rt);yr=a(td,"vector"),td.forEach(i),br=a(nt," data and "),Ot=r(nt,"B",{});var ad=l(Ot);wr=a(ad,"raster"),ad.forEach(i),_r=a(nt," data."),nt.forEach(i),Er=n(f),Dt=r(f,"H3",{});var od=l(Dt);Ir=a(od,"Vector Data"),od.forEach(i),Sr=n(f),Mt=r(f,"P",{});var rd=l(Mt);kr=a(rd,"Vector data uses geographic coordinates, or a series of coordinates, to create points, lines, and polygons representing real-world features."),rd.forEach(i),Tr=n(f),ve=r(f,"IMG",{width:!0,src:!0,alt:!0}),Lr=n(f),ye=r(f,"P",{});var _o=l(ye);Pr=a(_o,"e.g. in the map below (a screenshot of "),be=r(_o,"A",{href:!0,target:!0});var id=l(be);Gr=a(id,"OpenStreetMap"),id.forEach(i),Cr=a(_o,") lines are used to represent roads and rail, points for retail, polygons for parks and buildings, etc."),_o.forEach(i),Ar=n(f),we=r(f,"IMG",{width:!0,src:!0,alt:!0}),Rr=n(f),ie=r(f,"P",{});var fo=l(ie);_e=r(fo,"A",{href:!0,target:!0});var ld=l(_e);Or=a(ld,"GeoJSON"),ld.forEach(i),Dr=a(fo," and the "),Ee=r(fo,"A",{href:!0,target:!0});var sd=l(Ee);Mr=a(sd,"Shapefile"),sd.forEach(i),zr=a(fo," are probably the two most common vector data formats."),fo.forEach(i),Wr=n(f),zt=r(f,"H3",{});var nd=l(zt);xr=a(nd,"Raster Data"),nd.forEach(i),qr=n(f),Wt=r(f,"P",{});var hd=l(Wt);jr=a(hd,"Raster data represents space as a continuous grid with equal cell sizes. Each cell contains a value pertaining to the type of feature it represents. These values can be quantitative (e.g. elevation) or categorical (e.g. type of land use). Common examples of raster data include digital elevation models (DEMs), satellite imagery, and scanned images (e.g. historical maps)."),hd.forEach(i),Ur=n(f),xt=r(f,"P",{});var dd=l(xt);Nr=a(dd,"e.g. the map below shows a DEM for Toronto at two different scales."),dd.forEach(i),Qr=n(f),Fe=r(f,"IMG",{src:!0,alt:!0}),f.forEach(i),Br=n(G),m=r(G,"DIV",{id:!0});var y=l(m);qt=r(y,"H2",{});var cd=l(qt);Hr=a(cd,"GIS"),cd.forEach(i),Vr=n(y),jt=r(y,"P",{});var pd=l(jt);Fr=a(pd,"The power of GIS software and tools is the ability to work with data stored in different layers (e.g. a layer for roads, another for buildings, and so on) in conjunction with each other. These layers can be visualized and analyzed relative to each other based on their spatial relationships."),pd.forEach(i),Jr=n(y),Ie=r(y,"IMG",{width:!0,src:!0,alt:!0}),Yr=n(y),Ut=r(y,"P",{});var fd=l(Ut);$r=a(fd,"GIS software usually links to data stored elsewhere on a computer, rather than in a project file. If the source location of the data (i.e. which folder it's in) changes, then this will have to be updated in the GIS project. If data are edited in GIS, it will update the data in its source location."),fd.forEach(i),Kr=n(y),Nt=r(y,"H3",{});var ud=l(Nt);Xr=a(ud,"Common Tools & Software"),ud.forEach(i),Zr=n(y),Qt=r(y,"P",{});var gd=l(Qt);ei=a(gd,"Desktop GIS software"),gd.forEach(i),ti=n(y),le=r(y,"UL",{class:!0});var Eo=l(le);Bt=r(Eo,"LI",{});var md=l(Bt);ai=a(md,"QGIS (free and open source, can do most tasks, popular in tech and academia and non-profits)"),md.forEach(i),oi=n(Eo),Ht=r(Eo,"LI",{});var vd=l(Ht);ri=a(vd,"ArcGIS (proprietary, can do most tasks, used by big organizations)"),vd.forEach(i),Eo.forEach(i),ii=n(y),Vt=r(y,"P",{});var yd=l(Vt);li=a(yd,"Web-based GIS and mapping"),yd.forEach(i),si=n(y),P=r(y,"UL",{class:!0});var V=l(P);Ft=r(V,"LI",{});var bd=l(Ft);ni=a(bd,"MapBox (commercial, free basic accounts)"),bd.forEach(i),hi=n(V),Jt=r(V,"LI",{});var wd=l(Jt);di=a(wd,"CARTO (commercial)"),wd.forEach(i),ci=n(V),Yt=r(V,"LI",{});var _d=l(Yt);pi=a(_d,"ArcGIS Online (commercial)"),_d.forEach(i),fi=n(V),$t=r(V,"LI",{});var Ed=l($t);ui=a(Ed,"D3 (free, steeper learning curve)"),Ed.forEach(i),gi=n(V),Kt=r(V,"LI",{});var Id=l(Kt);mi=a(Id,"Observable (free, steeper learning curve)"),Id.forEach(i),V.forEach(i),vi=n(y),Xt=r(y,"P",{});var Sd=l(Xt);yi=a(Sd,"GIS & Spatial analysis using code"),Sd.forEach(i),bi=n(y),se=r(y,"UL",{class:!0});var Io=l(se);Zt=r(Io,"LI",{});var kd=l(Zt);wi=a(kd,"Python, R (for processing data, statistical analysis, making simple maps)"),kd.forEach(i),_i=n(Io),ea=r(Io,"LI",{});var Td=l(ea);Ei=a(Td,"PostGIS (spatial databases and queries)"),Td.forEach(i),Io.forEach(i),Ii=n(y),ta=r(y,"P",{});var Ld=l(ta);Si=a(Ld,"Many more!"),Ld.forEach(i),y.forEach(i),ki=n(G),c=r(G,"DIV",{id:!0});var u=l(c);aa=r(u,"H2",{});var Pd=l(aa);Ti=a(Pd,"Tutorial (1)"),Pd.forEach(i),Li=n(u),oa=r(u,"H3",{});var Gd=l(oa);Pi=a(Gd,"Loading, Querying, and Visualizing Data"),Gd.forEach(i),Gi=n(u),ra=r(u,"P",{});var Cd=l(ra);Ci=a(Cd,`Let's open up QGIS with a blank project. The top bars are various functions/tools for working with data. The "Browser" allows for navigating and loading datasets. The "Layers" panel will populate with each dataset that is added to the project. And the big blank square is where your map data will be visualized.`),Cd.forEach(i),Ai=n(u),Je=r(u,"IMG",{src:!0,alt:!0}),Ri=n(u),ia=r(u,"P",{});var Ad=l(ia);Oi=a(Ad,"Let's begin by finding data from the City of Toronto's Open Data portal and loading it into QGIS. This is the data we'll be looking at:"),Ad.forEach(i),Di=n(u),N=r(u,"UL",{});var ce=l(N);Ye=r(ce,"LI",{});var vh=l(Ye);Se=r(vh,"A",{href:!0,target:!0});var Rd=l(Se);Mi=a(Rd,"Business Improvement Areas (BIA)"),Rd.forEach(i),zi=a(vh,"."),vh.forEach(i),Wi=n(ce),$e=r(ce,"LI",{});var yh=l($e);ke=r(yh,"A",{href:!0,target:!0});var Od=l(ke);xi=a(Od,"Street Centrelines"),Od.forEach(i),qi=a(yh," (streets, railways, trails, etc.)."),yh.forEach(i),ji=n(ce),Ke=r(ce,"LI",{});var bh=l(Ke);Te=r(bh,"A",{href:!0,target:!0});var Dd=l(Te);Ui=a(Dd,"Aerial Imagery"),Dd.forEach(i),Ni=a(bh,". We'll be adding the most recent imagery layer."),bh.forEach(i),Qi=n(ce),W=r(ce,"LI",{});var te=l(W);Le=r(te,"A",{href:!0,target:!0});var Md=l(Le);Bi=a(Md,"Bike Share Stations"),Md.forEach(i),Hi=a(te,'. This data are a "live" '),la=r(te,"CODE",{});var zd=l(la);Vi=a(zd,"json"),zd.forEach(i),Fi=a(te," feed, I've scraped it with this "),Pe=r(te,"A",{href:!0,target:!0});var Wd=l(Pe);Ji=a(Wd,"script"),Wd.forEach(i),Yi=a(te,", the result can be downloaded from "),ne=r(te,"A",{href:!0,target:!0,download:!0});var xd=l(ne);$i=a(xd,"here"),xd.forEach(i),Ki=a(te,` (if this link doesn't download directly, you can copy and paste the content into a text editor, or just "save as" the web page).`),te.forEach(i),ce.forEach(i),Xi=n(u),E=r(u,"P",{});var C=l(E);Zi=a(C,"Let's start by loading in the aerial imagery as a base layer. This is a raster dataset (each cell/pixel has a colour value) stored on the City's server. It can be loaded into QGIS by right-clicking on "),sa=r(C,"I",{});var qd=l(sa);el=a(qd,"WMS/WMTS"),qd.forEach(i),tl=a(C," layer in the browser panel and adding a "),na=r(C,"I",{});var jd=l(na);al=a(jd,"New Connection"),jd.forEach(i),ol=a(C," or by going to "),ha=r(C,"I",{});var Ud=l(ha);rl=a(Ud,"Layer"),Ud.forEach(i),il=a(C,", then "),da=r(C,"I",{});var Nd=l(da);ll=a(Nd,"Data Source Manager"),Nd.forEach(i),sl=a(C," and navigating to "),ca=r(C,"I",{});var Qd=l(ca);nl=a(Qd,"WMS/WMTS"),Qd.forEach(i),hl=a(C,". Once there, add in this URL "),pa=r(C,"CODE",{});var Bd=l(pa);dl=a(Bd,"https://gis.toronto.ca/arcgis/rest/services/basemap/cot_ortho/MapServer/WMTS"),Bd.forEach(i),cl=a(C," and provide a descriptive name for the layer.."),C.forEach(i),pl=n(u),Q=r(u,"P",{});var pe=l(Q);fl=a(pe,"Now let's add the BIA and CentreLine data. Download these from the links provided above. They can be added into QGIS either by dragging and dropping them from your file manager onto the map or layers panel. Or they can be added by "),fa=r(pe,"I",{});var Hd=l(fa);ul=a(Hd,"Layer"),Hd.forEach(i),gl=a(pe,", then "),ua=r(pe,"I",{});var Vd=l(ua);ml=a(Vd,"Data Source Manager"),Vd.forEach(i),vl=a(pe,", and navigating to "),ga=r(pe,"I",{});var Fd=l(ga);yl=a(Fd,'Vector"'),Fd.forEach(i),bl=a(pe,"."),pe.forEach(i),wl=n(u),ma=r(u,"P",{});var Jd=l(ma);_l=a(Jd,"Once added, your map should look something like this:"),Jd.forEach(i),El=n(u),Xe=r(u,"IMG",{src:!0,alt:!0}),Il=n(u),va=r(u,"P",{});var Yd=l(va);Sl=a(Yd,"The layers can be toggled on and off. They can also be dragged into different orders, the top layer on the panel will always be the layer that is shown on top on the map."),Yd.forEach(i),kl=n(u),K=r(u,"P",{});var ht=l(K);Tl=a(ht,"We can change the colours and style of each layer by right-clicking on a layer, going to "),ya=r(ht,"I",{});var $d=l(ya);Ll=a($d,"Properties"),$d.forEach(i),Pl=a(ht,", and then "),ba=r(ht,"I",{});var Kd=l(ba);Gl=a(Kd,"Symbology"),Kd.forEach(i),Cl=a(ht,". In the image above, I changed the colours of the two vector layers, as well as the stroke-width of the Centreline layer."),ht.forEach(i),Al=n(u),x=r(u,"P",{});var ae=l(x);Rl=a(ae,"Let's explore how we can select and filter data. We'll use the Centreline layer as an example. Right-clicking they layer allows us to view it's attribute table. There is a column in here called "),wa=r(ae,"CODE",{});var Xd=l(wa);Ol=a(Xd,"FEATURE_00"),Xd.forEach(i),Dl=a(ae," which indicates the type of feature. Right-click and open up the "),_a=r(ae,"I",{});var Zd=l(_a);Ml=a(Zd,"Properties"),Zd.forEach(i),zl=a(ae," of the layer, then click "),Ea=r(ae,"I",{});var ec=l(Ea);Wl=a(ec,"Source"),ec.forEach(i),xl=a(ae,", and play with filtering the data. e.g. this is a query for filtering to only show laneways "),Ia=r(ae,"CODE",{});var tc=l(Ia);ql=a(tc,`"FEATURE_00" = 'Laneway'`),tc.forEach(i),ae.forEach(i),jl=n(u),S=r(u,"P",{});var q=l(S);Ul=a(q,"We can also visualize data based on values in the attribute table. First clear the above query. Then in the CentreLine "),Sa=r(q,"I",{});var ac=l(Sa);Nl=a(ac,"Properties"),ac.forEach(i),Ql=a(q,", go to "),ka=r(q,"I",{});var oc=l(ka);Bl=a(oc,"Symbology"),oc.forEach(i),Hl=a(q,", then at the top, select "),Ta=r(q,"I",{});var rc=l(Ta);Vl=a(rc,"Categorized"),rc.forEach(i),Fl=a(q,". Try selecting "),La=r(q,"I",{});var ic=l(La);Jl=a(ic,"FEATURE_00"),ic.forEach(i),Yl=a(q," again. Click "),Pa=r(q,"I",{});var lc=l(Pa);$l=a(lc,"Classify"),lc.forEach(i),Kl=a(q," at the bottom of the window. We can now quickly visualize where different features are on the map! Each category can also be styled individually be turned off and on in the layers panel."),q.forEach(i),Xl=n(u),Ze=r(u,"IMG",{src:!0,alt:!0}),Zl=n(u),k=r(u,"P",{});var j=l(k);es=a(j,"Now let's learn how to visualize data based on numeric data. We can use the bike share station data for this. Download and load this dataset into QGIS. Then go to it's "),Ga=r(j,"I",{});var sc=l(Ga);ts=a(sc,"Properties"),sc.forEach(i),as=a(j,", "),Ca=r(j,"I",{});var nc=l(Ca);os=a(nc,"Symbology"),nc.forEach(i),rs=a(j,", then at the top, select "),Aa=r(j,"I",{});var hc=l(Aa);is=a(hc,"Graduated"),hc.forEach(i),ls=a(j,". In this menu, we can color the points based on a numeric value in a column. Let's colour by the "),Ra=r(j,"CODE",{});var dc=l(Ra);ss=a(dc,"capacity"),dc.forEach(i),ns=a(j," column (this is the number of bikes that can be stored at each docking station). Notice the options available for classifying data (number of bins, whether to use quantiles or equal intervals, etc.). Hit "),Oa=r(j,"I",{});var cc=l(Oa);hs=a(cc,"Classify"),cc.forEach(i),ds=a(j," to update the map. Note how different classification schemes can highlight or hide different spatial patterns."),j.forEach(i),cs=n(u),et=r(u,"IMG",{src:!0,alt:!0}),u.forEach(i),ps=n(G),v=r(G,"DIV",{id:!0});var b=l(v);Da=r(b,"H2",{});var pc=l(Da);fs=a(pc,"Tutorial (2)"),pc.forEach(i),us=n(b),Ma=r(b,"H3",{});var fc=l(Ma);gs=a(fc,"Table Joins and Choropleths"),fc.forEach(i),ms=n(b),Ge=r(b,"P",{});var So=l(Ge);vs=a(So,"Start up a new QGIS project and add in the data downloaded from "),Ce=r(So,"A",{href:!0,target:!0});var uc=l(Ce);ys=a(uc,"here"),uc.forEach(i),bs=a(So,"."),So.forEach(i),ws=n(b),X=r(b,"P",{});var dt=l(X);_s=a(dt,"First, let's look at data. We have a polygon layer which represents census tracts. These data are created by Statistics Canada to share aggregated for the Canadian census. They approximately correspond to neighbourhoods. Census tract boundary data were originally downloaded from "),Ae=r(dt,"A",{href:!0,target:!0});var gc=l(Ae);Es=a(gc,"here"),gc.forEach(i),Is=a(dt,", while attribute data were downloaded from "),Re=r(dt,"A",{href:!0,target:!0});var mc=l(Re);Ss=a(mc,"here"),mc.forEach(i),ks=a(dt,"."),dt.forEach(i),Ts=n(b),Oe=r(b,"P",{});var ko=l(Oe);Ls=a(ko,"We also have a line layer representing major transit lines in Toronto (originally sourced from Metrolinx). We can categorize line data by "),za=r(ko,"CODE",{});var vc=l(za);Ps=a(vc,"status"),vc.forEach(i),Gs=a(ko,", using different colours or line types to display whether the transit route is existing or under construction. The screenshot below shows the result. (Also note how the map has been rotated 17.7 degrees, to horizontally align some of the features and reduce empty white space)."),ko.forEach(i),Cs=n(b),tt=r(b,"IMG",{src:!0,alt:!0}),As=n(b),I=r(b,"P",{});var A=l(I);Rs=a(A,"Also included is a "),Wa=r(A,"CODE",{});var yc=l(Wa);Os=a(yc,".csv"),yc.forEach(i),Ds=a(A," table which contains data linked to the unique identifier, "),xa=r(A,"CODE",{});var bc=l(xa);Ms=a(bc,"ctuid"),bc.forEach(i),zs=a(A,", of each census tract. We can use the "),qa=r(A,"CODE",{});var wc=l(qa);Ws=a(wc,"ctuid"),wc.forEach(i),xs=a(A," to join this tabular data to the spatial boundaries of census tracts. Do so by, first adding the table as a layer into QGIS. Then open up the "),ja=r(A,"I",{});var _c=l(ja);qs=a(_c,"Properties"),_c.forEach(i),js=a(A," of the censust tract polygon layer, and go to "),Ua=r(A,"I",{});var Ec=l(Ua);Us=a(Ec,"Joins"),Ec.forEach(i),Ns=a(A,". Add a new join, using "),Na=r(A,"CODE",{});var Ic=l(Na);Qs=a(Ic,"ctuid"),Ic.forEach(i),Bs=a(A," as the source and target fields. Once complete, we can open up the attribute table and see these additional columns."),A.forEach(i),Hs=n(b),De=r(b,"P",{});var To=l(De);Vs=a(To,"We can now visualize these polygons as a "),Me=r(To,"A",{href:!0,target:!0});var Sc=l(Me);Fs=a(Sc,"choropleth map"),Sc.forEach(i),Js=a(To," (maps where polygons are shaded by numeric attribute values). Similar to the previous tutorial, open up the layer properties, go to symbology, and style based on graduated symbols.  It's often preferred to visualize a choropleth as a rate or a density (in terms of people per area) in order not to exaggerate counts in larger areas."),To.forEach(i),Ys=n(b),ze=r(b,"P",{});var Lo=l(ze);$s=a(Lo,"(Note that a numeric column might be imported as a string. If this is the case, to convert to a number to visualize, click on the epsilon on the top-right, and use the "),Qa=r(Lo,"CODE",{});var kc=l(Qa);Ks=a(kc,"to_real()"),kc.forEach(i),Xs=a(Lo," function to convert to a numeric value)."),Lo.forEach(i),Zs=n(b),Ba=r(b,"P",{});var Tc=l(Ba);en=a(Tc,"For example, the following shows a choropleth map of the percent of people who live in low-income households by neighbourhood relative to major transit lines."),Tc.forEach(i),tn=n(b),at=r(b,"IMG",{src:!0,alt:!0}),an=n(b),Z=r(b,"P",{});var ct=l(Z);on=a(ct,"This map was exported by going to "),Ha=r(ct,"I",{});var Lc=l(Ha);rn=a(Lc,"Project"),Lc.forEach(i),ln=a(ct,", selecting "),Va=r(ct,"I",{});var Pc=l(Va);sn=a(Pc,"New Print Layout"),Pc.forEach(i),nn=a(ct,", and then adding in a map view, legend, and scale bar to the blank page."),ct.forEach(i),b.forEach(i),hn=n(G),p=r(G,"DIV",{id:!0});var g=l(p);Fa=r(g,"H2",{});var Gc=l(Fa);dn=a(Gc,"Tutorial (3)"),Gc.forEach(i),cn=n(g),Ja=r(g,"H3",{});var Cc=l(Ja);pn=a(Cc,"Geoprocessing"),Cc.forEach(i),fn=n(g),Ya=r(g,"P",{});var Ac=l(Ya);un=a(Ac,"Next, we're going to learn a few commonly used geoprocessing tasks, using the following data:"),Ac.forEach(i),gn=n(g),ee=r(g,"UL",{});var pt=l(ee);ot=r(pt,"LI",{});var wh=l(ot);We=r(wh,"A",{href:!0,target:!0});var Rc=l(We);mn=a(Rc,"Street Centrelines"),Rc.forEach(i),vn=a(wh," (same as in tutorial 1)."),wh.forEach(i),yn=n(pt),rt=r(pt,"LI",{});var _h=l(rt);xe=r(_h,"A",{href:!0,target:!0});var Oc=l(xe);bn=a(Oc,"Public Libraries"),Oc.forEach(i),wn=a(_h,"."),_h.forEach(i),_n=n(pt),he=r(pt,"LI",{});var uo=l(he);qe=r(uo,"A",{href:!0,target:!0});var Dc=l(qe);En=a(Dc,"Apartment Buildings"),Dc.forEach(i),In=a(uo," (originally geocoded from the City's apartment building registration and evaluation data on "),je=r(uo,"A",{href:!0,target:!0});var Mc=l(je);Sn=a(Mc,"Open Data Toronto"),Mc.forEach(i),kn=a(uo,")."),uo.forEach(i),pt.forEach(i),Tn=n(g),$a=r(g,"H4",{});var zc=l($a);Ln=a(zc,"Projections and re-projecting data"),zc.forEach(i),Pn=n(g),Ue=r(g,"P",{});var Po=l(Ue);Gn=a(Po,"All spatial data include location data, typically in the form of coordinates. A "),it=r(Po,"A",{href:!0});var Wc=l(it);Cn=a(Wc,"Coordinate Reference System (CRS)"),Wc.forEach(i),An=a(Po," is a schema for referencing where features are on the earth's surface. Each CRS has specified units (e.g. degrees, metres, etc.). When working with urban data, we often want to have data in a CRS that does not distort local areas or distances, and has intuitive units (e.g. working with distances in metres rather than in degrees)."),Po.forEach(i),Rn=n(g),R=r(g,"P",{});var F=l(R);On=a(F,"To change the CRS of a vector layer, go to "),Ka=r(F,"I",{});var xc=l(Ka);Dn=a(xc,"Vector"),xc.forEach(i),Mn=a(F,", "),Xa=r(F,"I",{});var qc=l(Xa);zn=a(qc,"Data Management Tools"),qc.forEach(i),Wn=a(F,", then click "),Za=r(F,"I",{});var jc=l(Za);xn=a(jc,"Reproject Layer"),jc.forEach(i),qn=a(F,". Try converting the public libraries dataset into "),eo=r(F,"CODE",{});var Uc=l(eo);jn=a(Uc,"NAD83 / UTM zone 17N - EPSG:26917"),Uc.forEach(i),Un=a(F,". This is a commonly used CRS for the Toronto region with units in metres."),F.forEach(i),Nn=n(g),to=r(g,"H4",{});var Nc=l(to);Qn=a(Nc,"Buffers"),Nc.forEach(i),Bn=n(g),O=r(g,"P",{});var J=l(O);Hn=a(J,"Using our reprojected layer, try creating 1km buffers around the location of public libraries. At the top of the QGIS menu, go to "),ao=r(J,"I",{});var Qc=l(ao);Vn=a(Qc,"Vector"),Qc.forEach(i),Fn=a(J,", "),oo=r(J,"I",{});var Bc=l(oo);Jn=a(Bc,"Geoprocessing Tools"),Bc.forEach(i),Yn=a(J,", then click "),ro=r(J,"I",{});var Hc=l(ro);$n=a(Hc,"Buffer"),Hc.forEach(i),Kn=a(J,". Select the public libraries as the input layer, and "),io=r(J,"CODE",{});var Vc=l(io);Xn=a(Vc,"1000"),Vc.forEach(i),Zn=a(J," metres as the distance. We can quickly see where people have easy access to public libraries in the city."),J.forEach(i),eh=n(g),lt=r(g,"IMG",{src:!0,alt:!0}),th=n(g),lo=r(g,"H4",{});var Fc=l(lo);ah=a(Fc,"Select by Location"),Fc.forEach(i),oh=n(g),D=r(g,"P",{});var Y=l(D);rh=a(Y,"This can become more useful when we compare it to other layers. Let's try to find the public housing apartment buildings in Toronto that are not within 1km to a public library. We can do this first by filtering the apartment buildings dataset by their property type "),so=r(Y,"CODE",{});var Jc=l(so);ih=a(Jc,`"A_PROPERTY_TYPE"='SOCIAL HOUSING' OR "A_PROPERTY_TYPE"='TCHC'`),Jc.forEach(i),lh=a(Y,". Then go to "),no=r(Y,"I",{});var Yc=l(no);sh=a(Yc,"Vector"),Yc.forEach(i),nh=a(Y,", "),ho=r(Y,"I",{});var $c=l(ho);hh=a($c,"Research Tools"),$c.forEach(i),dh=a(Y,", then click "),co=r(Y,"I",{});var Kc=l(co);ch=a(Kc,"Select by Location"),Kc.forEach(i),ph=a(Y,". Here we can select the apartments that intersect the buffers. Inverting this selection will highlight the apartment buildings that are NOT within a 1km from a public library, 144 in total."),Y.forEach(i),fh=n(g),st=r(g,"IMG",{src:!0,alt:!0}),uh=n(g),po=r(g,"H4",{});var Xc=l(po);gh=a(Xc,"Spatial Join"),Xc.forEach(i),mh=n(g),vo=r(g,"P",{}),l(vo).forEach(i),g.forEach(i),G.forEach(i),this.h()},h(){h(oe,"rel","preconnect"),h(oe,"href","https://fonts.googleapis.com"),h(fe,"rel","preconnect"),h(fe,"href","https://fonts.gstatic.com"),h(fe,"crossorigin",""),h(Ne,"href","https://fonts.googleapis.com/css2?family=Source+Serif+Pro:ital,wght@0,400;0,700;1,400;1,700&display=swap"),h(Ne,"rel","stylesheet"),h(Qe,"href","https://fonts.googleapis.com/css2?family=Roboto&family=Source+Serif+Pro&display=swap"),h(Qe,"rel","stylesheet"),h(Be,"name","viewport"),h(Be,"content","width=device-width, initial-scale=1, minimum-scale=1"),document.title="GIS Workshop / MUI2000",h(He,"name","description"),h(He,"content","GIS workshop for MUI2000"),h(Ve,"name","author"),h(Ve,"content","Jeff Allen"),h(z,"id","title"),h(L,"class","list"),h(me,"href","https://www.qgis.org/en/site/"),h(me,"target","_blank"),h(T,"id","text"),h(re,"class","list"),h(ve,"width","400"),U(ve.src,Ih=pp)||h(ve,"src",Ih),h(ve,"alt","coords"),h(be,"href","https://www.openstreetmap.org/"),h(be,"target","_blank"),h(we,"width",""),U(we.src,Sh=fp)||h(we,"src",Sh),h(we,"alt","OpenStreetMap"),h(_e,"href","https://en.wikipedia.org/wiki/GeoJSON"),h(_e,"target","_blank"),h(Ee,"href","https://en.wikipedia.org/wiki/Shapefile"),h(Ee,"target","_blank"),U(Fe.src,kh=up)||h(Fe,"src",kh),h(Fe,"alt","DEM Toronto"),h(d,"id","text"),h(Ie,"width","350px"),U(Ie.src,Th=gp)||h(Ie,"src",Th),h(Ie,"alt","gis-layers"),h(le,"class","list"),h(P,"class","list"),h(se,"class","list"),h(m,"id","text"),U(Je.src,Lh=mp)||h(Je,"src",Lh),h(Je,"alt","qgis-blank"),h(Se,"href","https://open.toronto.ca/dataset/business-improvement-areas/"),h(Se,"target","_blank"),h(ke,"href","https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/1d079757-377b-4564-82df-eb5638583bfb/resource/d86bdca4-ab2c-470d-80fb-34647ea0e87f/download/Centreline%20-%20Version%202%20-%204326.zip"),h(ke,"target","_blank"),h(Te,"href","https://open.toronto.ca/dataset/web-map-services/"),h(Te,"target","_blank"),h(Le,"href","https://open.toronto.ca/dataset/bike-share-toronto/"),h(Le,"target","_blank"),h(Pe,"href","https://github.com/schoolofcities/mapping-workshops-2023/blob/main/data/download-bike-share.py"),h(Pe,"target","_blank"),h(ne,"href","https://raw.githubusercontent.com/schoolofcities/mapping-workshops-2023/main/data/bikeshare-stations.geojson"),h(ne,"target","_blank"),h(ne,"download",""),U(Xe.src,Ph=vp)||h(Xe,"src",Ph),h(Xe,"alt","qgis-layers1"),U(Ze.src,Gh=yp)||h(Ze,"src",Gh),h(Ze,"alt","qgis-centre"),U(et.src,Ch=bp)||h(et,"src",Ch),h(et,"alt","qgis-bikeshare"),h(c,"id","text"),h(Ce,"href","https://github.com/schoolofcities/mapping-workshops-2023/raw/main/data/toronto.zip"),h(Ce,"target","_blank"),h(Ae,"href","https://www12.statcan.gc.ca/census-recensement/2021/geo/sip-pis/boundary-limites/index2021-eng.cfm?year=21"),h(Ae,"target","_blank"),h(Re,"href","https://www12.statcan.gc.ca/census-recensement/2021/dp-pd/index-eng.cfm"),h(Re,"target","_blank"),U(tt.src,Ah=wp)||h(tt,"src",Ah),h(tt,"alt","qgis-railct"),h(Me,"href","https://en.wikipedia.org/wiki/Choropleth_map"),h(Me,"target","_blank"),U(at.src,Rh=_p)||h(at,"src",Rh),h(at,"alt","qgis-choropleth"),h(v,"id","text"),h(We,"href","https://open.toronto.ca/dataset/toronto-centreline-tcl/"),h(We,"target","_blank"),h(xe,"href","https://open.toronto.ca/dataset/toronto-public-library-branch-locations/"),h(xe,"target","_blank"),h(qe,"href","https://github.com/schoolofcities/mapping-workshops-2023/raw/main/data/toronto-apartments.geojson"),h(qe,"target","_blank"),h(je,"href","https://open.toronto.ca/catalogue/?search=apartment%20buildings&sort=score%20desc"),h(je,"target","_blank"),h(it,"href","https://en.wikipedia.org/wiki/Spatial_reference_system"),U(lt.src,Oh=Ep)||h(lt,"src",Oh),h(lt,"alt","qgis-buffer"),U(st.src,Dh=Ip)||h(st,"src",Dh),h(st,"alt","qgis-bufferselect"),h(p,"id","text")},m(_,M){e(document.head,oe),e(document.head,fe),e(document.head,Ne),e(document.head,Qe),e(document.head,Be),e(document.head,He),e(document.head,Ve),Eh(_,go,M),lp(ue,_,M),Eh(_,mo,M),Eh(_,w,M),e(w,z),e(z,ft),e(ft,Go),e(z,Co),e(z,ut),e(ut,Ao),e(z,Ro),e(z,gt),e(gt,Oo),e(z,Do),e(z,mt),e(mt,Mo),e(w,zo),e(w,T),e(T,vt),e(vt,Wo),e(T,xo),e(T,yt),e(yt,qo),e(T,jo),e(T,L),e(L,bt),e(bt,Uo),e(L,No),e(L,wt),e(wt,Qo),e(L,Bo),e(L,_t),e(_t,Ho),e(L,Vo),e(L,Et),e(Et,Fo),e(L,Jo),e(L,It),e(It,Yo),e(T,$o),e(T,St),e(St,Ko),e(T,Xo),e(T,ge),e(ge,Zo),e(ge,me),e(me,er),e(ge,tr),e(w,ar),e(w,d),e(d,kt),e(kt,or),e(d,rr),e(d,Tt),e(Tt,ir),e(d,lr),e(d,re),e(re,Lt),e(Lt,sr),e(re,nr),e(re,Pt),e(Pt,hr),e(d,dr),e(d,Gt),e(Gt,cr),e(d,pr),e(d,Ct),e(Ct,fr),e(d,ur),e(d,At),e(At,gr),e(d,mr),e(d,$),e($,vr),e($,Rt),e(Rt,yr),e($,br),e($,Ot),e(Ot,wr),e($,_r),e(d,Er),e(d,Dt),e(Dt,Ir),e(d,Sr),e(d,Mt),e(Mt,kr),e(d,Tr),e(d,ve),e(d,Lr),e(d,ye),e(ye,Pr),e(ye,be),e(be,Gr),e(ye,Cr),e(d,Ar),e(d,we),e(d,Rr),e(d,ie),e(ie,_e),e(_e,Or),e(ie,Dr),e(ie,Ee),e(Ee,Mr),e(ie,zr),e(d,Wr),e(d,zt),e(zt,xr),e(d,qr),e(d,Wt),e(Wt,jr),e(d,Ur),e(d,xt),e(xt,Nr),e(d,Qr),e(d,Fe),e(w,Br),e(w,m),e(m,qt),e(qt,Hr),e(m,Vr),e(m,jt),e(jt,Fr),e(m,Jr),e(m,Ie),e(m,Yr),e(m,Ut),e(Ut,$r),e(m,Kr),e(m,Nt),e(Nt,Xr),e(m,Zr),e(m,Qt),e(Qt,ei),e(m,ti),e(m,le),e(le,Bt),e(Bt,ai),e(le,oi),e(le,Ht),e(Ht,ri),e(m,ii),e(m,Vt),e(Vt,li),e(m,si),e(m,P),e(P,Ft),e(Ft,ni),e(P,hi),e(P,Jt),e(Jt,di),e(P,ci),e(P,Yt),e(Yt,pi),e(P,fi),e(P,$t),e($t,ui),e(P,gi),e(P,Kt),e(Kt,mi),e(m,vi),e(m,Xt),e(Xt,yi),e(m,bi),e(m,se),e(se,Zt),e(Zt,wi),e(se,_i),e(se,ea),e(ea,Ei),e(m,Ii),e(m,ta),e(ta,Si),e(w,ki),e(w,c),e(c,aa),e(aa,Ti),e(c,Li),e(c,oa),e(oa,Pi),e(c,Gi),e(c,ra),e(ra,Ci),e(c,Ai),e(c,Je),e(c,Ri),e(c,ia),e(ia,Oi),e(c,Di),e(c,N),e(N,Ye),e(Ye,Se),e(Se,Mi),e(Ye,zi),e(N,Wi),e(N,$e),e($e,ke),e(ke,xi),e($e,qi),e(N,ji),e(N,Ke),e(Ke,Te),e(Te,Ui),e(Ke,Ni),e(N,Qi),e(N,W),e(W,Le),e(Le,Bi),e(W,Hi),e(W,la),e(la,Vi),e(W,Fi),e(W,Pe),e(Pe,Ji),e(W,Yi),e(W,ne),e(ne,$i),e(W,Ki),e(c,Xi),e(c,E),e(E,Zi),e(E,sa),e(sa,el),e(E,tl),e(E,na),e(na,al),e(E,ol),e(E,ha),e(ha,rl),e(E,il),e(E,da),e(da,ll),e(E,sl),e(E,ca),e(ca,nl),e(E,hl),e(E,pa),e(pa,dl),e(E,cl),e(c,pl),e(c,Q),e(Q,fl),e(Q,fa),e(fa,ul),e(Q,gl),e(Q,ua),e(ua,ml),e(Q,vl),e(Q,ga),e(ga,yl),e(Q,bl),e(c,wl),e(c,ma),e(ma,_l),e(c,El),e(c,Xe),e(c,Il),e(c,va),e(va,Sl),e(c,kl),e(c,K),e(K,Tl),e(K,ya),e(ya,Ll),e(K,Pl),e(K,ba),e(ba,Gl),e(K,Cl),e(c,Al),e(c,x),e(x,Rl),e(x,wa),e(wa,Ol),e(x,Dl),e(x,_a),e(_a,Ml),e(x,zl),e(x,Ea),e(Ea,Wl),e(x,xl),e(x,Ia),e(Ia,ql),e(c,jl),e(c,S),e(S,Ul),e(S,Sa),e(Sa,Nl),e(S,Ql),e(S,ka),e(ka,Bl),e(S,Hl),e(S,Ta),e(Ta,Vl),e(S,Fl),e(S,La),e(La,Jl),e(S,Yl),e(S,Pa),e(Pa,$l),e(S,Kl),e(c,Xl),e(c,Ze),e(c,Zl),e(c,k),e(k,es),e(k,Ga),e(Ga,ts),e(k,as),e(k,Ca),e(Ca,os),e(k,rs),e(k,Aa),e(Aa,is),e(k,ls),e(k,Ra),e(Ra,ss),e(k,ns),e(k,Oa),e(Oa,hs),e(k,ds),e(c,cs),e(c,et),e(w,ps),e(w,v),e(v,Da),e(Da,fs),e(v,us),e(v,Ma),e(Ma,gs),e(v,ms),e(v,Ge),e(Ge,vs),e(Ge,Ce),e(Ce,ys),e(Ge,bs),e(v,ws),e(v,X),e(X,_s),e(X,Ae),e(Ae,Es),e(X,Is),e(X,Re),e(Re,Ss),e(X,ks),e(v,Ts),e(v,Oe),e(Oe,Ls),e(Oe,za),e(za,Ps),e(Oe,Gs),e(v,Cs),e(v,tt),e(v,As),e(v,I),e(I,Rs),e(I,Wa),e(Wa,Os),e(I,Ds),e(I,xa),e(xa,Ms),e(I,zs),e(I,qa),e(qa,Ws),e(I,xs),e(I,ja),e(ja,qs),e(I,js),e(I,Ua),e(Ua,Us),e(I,Ns),e(I,Na),e(Na,Qs),e(I,Bs),e(v,Hs),e(v,De),e(De,Vs),e(De,Me),e(Me,Fs),e(De,Js),e(v,Ys),e(v,ze),e(ze,$s),e(ze,Qa),e(Qa,Ks),e(ze,Xs),e(v,Zs),e(v,Ba),e(Ba,en),e(v,tn),e(v,at),e(v,an),e(v,Z),e(Z,on),e(Z,Ha),e(Ha,rn),e(Z,ln),e(Z,Va),e(Va,sn),e(Z,nn),e(w,hn),e(w,p),e(p,Fa),e(Fa,dn),e(p,cn),e(p,Ja),e(Ja,pn),e(p,fn),e(p,Ya),e(Ya,un),e(p,gn),e(p,ee),e(ee,ot),e(ot,We),e(We,mn),e(ot,vn),e(ee,yn),e(ee,rt),e(rt,xe),e(xe,bn),e(rt,wn),e(ee,_n),e(ee,he),e(he,qe),e(qe,En),e(he,In),e(he,je),e(je,Sn),e(he,kn),e(p,Tn),e(p,$a),e($a,Ln),e(p,Pn),e(p,Ue),e(Ue,Gn),e(Ue,it),e(it,Cn),e(Ue,An),e(p,Rn),e(p,R),e(R,On),e(R,Ka),e(Ka,Dn),e(R,Mn),e(R,Xa),e(Xa,zn),e(R,Wn),e(R,Za),e(Za,xn),e(R,qn),e(R,eo),e(eo,jn),e(R,Un),e(p,Nn),e(p,to),e(to,Qn),e(p,Bn),e(p,O),e(O,Hn),e(O,ao),e(ao,Vn),e(O,Fn),e(O,oo),e(oo,Jn),e(O,Yn),e(O,ro),e(ro,$n),e(O,Kn),e(O,io),e(io,Xn),e(O,Zn),e(p,eh),e(p,lt),e(p,th),e(p,lo),e(lo,ah),e(p,oh),e(p,D),e(D,rh),e(D,so),e(so,ih),e(D,lh),e(D,no),e(no,sh),e(D,nh),e(D,ho),e(ho,hh),e(D,dh),e(D,co),e(co,ch),e(D,ph),e(p,fh),e(p,st),e(p,uh),e(p,po),e(po,gh),e(p,mh),e(p,vo),yo=!0},p:sp,i(_){yo||(np(ue.$$.fragment,_),yo=!0)},o(_){hp(ue.$$.fragment,_),yo=!1},d(_){i(oe),i(fe),i(Ne),i(Qe),i(Be),i(He),i(Ve),_&&i(go),dp(ue,_),_&&i(mo),_&&i(w)}}}class Pp extends ep{constructor(oe){super(),tp(this,oe,null,Sp,ap,{})}}export{Pp as default};
