import{S as Jc,i as Yc,s as $c,k as o,a as s,w as Kc,q as t,I as Xc,l as r,h as i,c as n,x as Zc,m as l,r as a,n as h,J as U,G as e,b as yh,y as ep,B as tp,f as ap,t as op,z as rp}from"../../../../chunks/index-a8a08db8.js";import{T as ip}from"../../../../chunks/TopSofC-31e5beff.js";/* empty css                                */const lp=""+new URL("../../../../assets/coords-8d7033f1.png",import.meta.url).href,sp=""+new URL("../../../../assets/osm-college-bf243ca2.png",import.meta.url).href,np=""+new URL("../../../../assets/dem-toronto-c547fdc3.png",import.meta.url).href,hp=""+new URL("../../../../assets/gis-layers-479f3a99.png",import.meta.url).href,dp=""+new URL("../../../../assets/qgis-blank-c49863c8.png",import.meta.url).href,cp=""+new URL("../../../../assets/qgis-layers1-2075521d.png",import.meta.url).href,pp=""+new URL("../../../../assets/qgis-centre-db6f5d95.png",import.meta.url).href,fp=""+new URL("../../../../assets/qgis-bikeshare-2fd27b69.png",import.meta.url).href,up=""+new URL("../../../../assets/qgis-railct-8ad297f5.png",import.meta.url).href,gp=""+new URL("../../../../assets/qgis-choropleth-81a06853.png",import.meta.url).href,mp=""+new URL("../../../../assets/qgis-buffer-9fdd946a.png",import.meta.url).href,yp=""+new URL("../../../../assets/qgis-bufferselect-b78dff64.png",import.meta.url).href;function vp(Fc){let oe,fe,Ne,Qe,Be,He,Ve,uo,ue,go,w,z,ft,Lo,Go,ut,Po,Co,gt,Ao,Ro,mt,Oo,Do,T,yt,Mo,zo,vt,Wo,xo,L,bt,qo,jo,wt,Uo,No,_t,Qo,Bo,Et,Ho,Vo,It,Fo,Jo,St,Yo,$o,ge,Ko,me,Xo,Zo,er,d,kt,tr,ar,Tt,or,rr,re,Lt,ir,lr,Gt,sr,nr,Pt,hr,dr,Ct,cr,pr,At,fr,ur,$,gr,Rt,mr,yr,Ot,vr,br,wr,Dt,_r,Er,Mt,Ir,Sr,ye,vh,kr,ve,Tr,be,Lr,Gr,Pr,we,bh,Cr,ie,_e,Ar,Rr,Ee,Or,Dr,Mr,zt,zr,Wr,Wt,xr,qr,xt,jr,Ur,Fe,wh,Nr,g,qt,Qr,Br,jt,Hr,Vr,Ie,_h,Fr,Ut,Jr,Yr,Nt,$r,Kr,Qt,Xr,Zr,le,Bt,ei,ti,Ht,ai,oi,Vt,ri,ii,G,Ft,li,si,Jt,ni,hi,Yt,di,ci,$t,pi,fi,Kt,ui,gi,Xt,mi,yi,se,Zt,vi,bi,ea,wi,_i,ta,Ei,Ii,c,aa,Si,ki,oa,Ti,Li,ra,Gi,Pi,Je,Eh,Ci,ia,Ai,Ri,N,Ye,Se,Oi,Di,Mi,$e,ke,zi,Wi,xi,Ke,Te,qi,ji,Ui,W,Le,Ni,Qi,la,Bi,Hi,Ge,Vi,Fi,ne,Ji,Yi,$i,E,Ki,sa,Xi,Zi,na,el,tl,ha,al,ol,da,rl,il,ca,ll,sl,pa,nl,hl,dl,Q,cl,fa,pl,fl,ua,ul,gl,ga,ml,yl,vl,ma,bl,wl,Xe,Ih,_l,ya,El,Il,K,Sl,va,kl,Tl,ba,Ll,Gl,Pl,x,Cl,wa,Al,Rl,_a,Ol,Dl,Ea,Ml,zl,Ia,Wl,xl,S,ql,Sa,jl,Ul,ka,Nl,Ql,Ta,Bl,Hl,La,Vl,Fl,Ga,Jl,Yl,$l,Ze,Sh,Kl,k,Xl,Pa,Zl,es,Ca,ts,as,Aa,os,rs,Ra,is,ls,Oa,ss,ns,hs,et,kh,ds,m,Da,cs,ps,Ma,fs,us,Pe,gs,Ce,ms,ys,vs,X,bs,Ae,ws,_s,Re,Es,Is,Ss,Oe,ks,za,Ts,Ls,Gs,tt,Th,Ps,I,Cs,Wa,As,Rs,xa,Os,Ds,qa,Ms,zs,ja,Ws,xs,Ua,qs,js,Na,Us,Ns,Qs,De,Bs,Me,Hs,Vs,Fs,ze,Js,Qa,Ys,$s,Ks,Ba,Xs,Zs,at,Lh,en,Z,tn,Ha,an,on,Va,rn,ln,sn,u,Fa,nn,hn,Ja,dn,cn,Ya,pn,fn,ee,ot,We,un,gn,mn,rt,xe,yn,vn,bn,he,qe,wn,_n,je,En,In,Sn,$a,kn,Tn,Ue,Ln,it,Gn,Pn,Cn,R,An,Ka,Rn,On,Xa,Dn,Mn,Za,zn,Wn,eo,xn,qn,jn,to,Un,Nn,O,Qn,ao,Bn,Hn,oo,Vn,Fn,ro,Jn,Yn,io,$n,Kn,Xn,lt,Gh,Zn,lo,eh,th,D,ah,so,oh,rh,no,ih,lh,ho,sh,nh,co,hh,dh,ch,st,Ph,mo;return ue=new ip({}),{c(){oe=o("link"),fe=o("link"),Ne=o("link"),Qe=o("link"),Be=o("meta"),He=o("meta"),Ve=o("meta"),uo=s(),Kc(ue.$$.fragment),go=s(),w=o("main"),z=o("div"),ft=o("h1"),Lo=t("(Q)GIS WORKSHOP"),Go=s(),ut=o("p"),Po=t("For MUI2000"),Co=s(),gt=o("p"),Ao=t("By Jeff Allen"),Ro=s(),mt=o("p"),Oo=t("On January 23 & 30, 2023"),Do=s(),T=o("div"),yt=o("p"),Mo=t("We use Geographic Information Systems (GIS) to analyze, manipulate, and visualize spatial information on a computer."),zo=s(),vt=o("p"),Wo=t("Why is GIS useful?"),xo=s(),L=o("ul"),bt=o("li"),qo=t("visualize spatial data"),jo=s(),wt=o("li"),Uo=t("explore spatial patterns and relationships"),No=s(),_t=o("li"),Qo=t("make pretty and useful maps"),Bo=s(),Et=o("li"),Ho=t('generate new data, either "by hand" or via spatial relationships from other data (e.g. through spatial queries)'),Vo=s(),It=o("li"),Fo=t("perform spatial analysis (i.e. statistical methods applied to spatial data)"),Jo=s(),St=o("p"),Yo=t("GIS is often thought of as more than just a tool or piece of software. It can refer to all aspects of managing and analyzing digital spatially referenced data."),$o=s(),ge=o("p"),Ko=t("The following provides a brief overview of GIS followed by two short tutorials for getting started with GIS, using "),me=o("a"),Xo=t("QGIS"),Zo=t(", a free and open source desktop GIS software. The first tutorial uses data from the City of Toronto's Open Data portal. The second analyzes demographic data from the Canadian census as well as public transit data for Toronto"),er=s(),d=o("div"),kt=o("h2"),tr=t("Spatial Data"),ar=s(),Tt=o("p"),or=t("A spatial dataset is a combination of..."),rr=s(),re=o("ul"),Lt=o("li"),ir=t("attribute data (the what)"),lr=s(),Gt=o("li"),sr=t("location data and spatial dimensions (the where)"),nr=s(),Pt=o("p"),hr=t("Spatial data, this combination of attribute and location data, can be organized and represented in a number of different formats."),dr=s(),Ct=o("p"),cr=t("For example, a city can be represented on a map via a single point with a label (e.g. based on latitude and longitude coordinates). Or a city can be represented as a polygon, based on on it's administrative boundary"),pr=s(),At=o("p"),fr=t("Importantly, there are always uncertainty about the level of accuracy, precision, and resolution of spatial data. Spatial data are abstractions of reality, and thus have some loss of information when used for visualization and analysis. Any analysis can only be as good as the available data."),ur=s(),$=o("p"),gr=t("The two most common forms of spatial data are "),Rt=o("b"),mr=t("vector"),yr=t(" data and "),Ot=o("b"),vr=t("raster"),br=t(" data."),wr=s(),Dt=o("h3"),_r=t("Vector Data"),Er=s(),Mt=o("p"),Ir=t("Vector data uses geographic coordinates, or a series of coordinates, to create points, lines, and polygons representing real-world features."),Sr=s(),ye=o("img"),kr=s(),ve=o("p"),Tr=t("e.g. in the map below (a screenshot of "),be=o("a"),Lr=t("OpenStreetMap"),Gr=t(") lines are used to represent roads and rail, points for retail, polygons for parks and buildings, etc."),Pr=s(),we=o("img"),Cr=s(),ie=o("p"),_e=o("a"),Ar=t("GeoJSON"),Rr=t(" and the "),Ee=o("a"),Or=t("Shapefile"),Dr=t(" are probably the two most common vector data formats."),Mr=s(),zt=o("h3"),zr=t("Raster Data"),Wr=s(),Wt=o("p"),xr=t("Raster data represents space as a continuous grid with equal cell sizes. Each cell contains a value pertaining to the type of feature it represents. These values can be quantitative (e.g. elevation) or categorical (e.g. type of land use). Common examples of raster data include digital elevation models (DEMs), satellite imagery, and scanned images (e.g. historical maps)."),qr=s(),xt=o("p"),jr=t("e.g. the map below shows a DEM for Toronto at two different scales."),Ur=s(),Fe=o("img"),Nr=s(),g=o("div"),qt=o("h2"),Qr=t("GIS"),Br=s(),jt=o("p"),Hr=t("The power of GIS software and tools is the ability to work with data stored in different layers (e.g. a layer for roads, another for buildings, and so on) in conjunction with each other. These layers can be visualized and analyzed relative to each other based on their spatial relationships."),Vr=s(),Ie=o("img"),Fr=s(),Ut=o("p"),Jr=t("GIS software usually links to data stored elsewhere on a computer, rather than in a project file. If the source location of the data (i.e. which folder it's in) changes, then this will have to be updated in the GIS project. If data are edited in GIS, it will update the data in its source location."),Yr=s(),Nt=o("h3"),$r=t("Common Tools & Software"),Kr=s(),Qt=o("p"),Xr=t("Desktop GIS software"),Zr=s(),le=o("ul"),Bt=o("li"),ei=t("QGIS (free and open source, can do most tasks, popular in tech and academia and non-profits)"),ti=s(),Ht=o("li"),ai=t("ArcGIS (proprietary, can do most tasks, used by big organizations)"),oi=s(),Vt=o("p"),ri=t("Web-based GIS and mapping"),ii=s(),G=o("ul"),Ft=o("li"),li=t("MapBox (commercial, free basic accounts)"),si=s(),Jt=o("li"),ni=t("CARTO (commercial)"),hi=s(),Yt=o("li"),di=t("ArcGIS Online (commercial)"),ci=s(),$t=o("li"),pi=t("D3 (free, steeper learning curve)"),fi=s(),Kt=o("li"),ui=t("Observable (free, steeper learning curve)"),gi=s(),Xt=o("p"),mi=t("GIS & Spatial analysis using code"),yi=s(),se=o("ul"),Zt=o("li"),vi=t("Python, R (for processing data, statistical analysis, making simple maps)"),bi=s(),ea=o("li"),wi=t("PostGIS (spatial databases and queries)"),_i=s(),ta=o("p"),Ei=t("Many more!"),Ii=s(),c=o("div"),aa=o("h2"),Si=t("Tutorial (1)"),ki=s(),oa=o("h3"),Ti=t("Loading, Querying, and Visualizing Data"),Li=s(),ra=o("p"),Gi=t(`Let's open up QGIS with a blank project. The top bars are various functions/tools for working with data. The "Browser" allows for navigating and loading datasets. The "Layers" panel will populate with each dataset that is added to the project. And the big blank square is where your map data will be visualized.`),Pi=s(),Je=o("img"),Ci=s(),ia=o("p"),Ai=t("Let's begin by finding data from the City of Toronto's Open Data portal and loading it into QGIS. This is the data we'll be looking at:"),Ri=s(),N=o("ul"),Ye=o("li"),Se=o("a"),Oi=t("Business Improvement Areas (BIA)"),Di=t("."),Mi=s(),$e=o("li"),ke=o("a"),zi=t("Street Centrelines"),Wi=t(" (streets, railways, trails, etc.)."),xi=s(),Ke=o("li"),Te=o("a"),qi=t("Aerial Imagery"),ji=t(". We'll be adding the most recent imagery layer."),Ui=s(),W=o("li"),Le=o("a"),Ni=t("Bike Share Stations"),Qi=t('. This data are a "live" '),la=o("code"),Bi=t("json"),Hi=t(" feed, I've scraped it with this "),Ge=o("a"),Vi=t("script"),Fi=t(", the result can be downloaded from "),ne=o("a"),Ji=t("here"),Yi=t(` (if this link doesn't download directly, you can copy and paste the content into a text editor, or just "save as" the web page).`),$i=s(),E=o("p"),Ki=t("Let's start by loading in the aerial imagery as a base layer. This is a raster dataset (each cell/pixel has a colour value) stored on the City's server. It can be loaded into QGIS by right-clicking on "),sa=o("i"),Xi=t("WMS/WMTS"),Zi=t(" layer in the browser panel and adding a "),na=o("i"),el=t("New Connection"),tl=t(" or by going to "),ha=o("i"),al=t("Layer"),ol=t(", then "),da=o("i"),rl=t("Data Source Manager"),il=t(" and navigating to "),ca=o("i"),ll=t("WMS/WMTS"),sl=t(". Once there, add in this URL "),pa=o("code"),nl=t("https://gis.toronto.ca/arcgis/rest/services/basemap/cot_ortho/MapServer/WMTS"),hl=t(" and provide a descriptive name for the layer.."),dl=s(),Q=o("p"),cl=t("Now let's add the BIA and CentreLine data. Download these from the links provided above. They can be added into QGIS either by dragging and dropping them from your file manager onto the map or layers panel. Or they can be added by "),fa=o("i"),pl=t("Layer"),fl=t(", then "),ua=o("i"),ul=t("Data Source Manager"),gl=t(", and navigating to "),ga=o("i"),ml=t('Vector"'),yl=t("."),vl=s(),ma=o("p"),bl=t("Once added, your map should look something like this:"),wl=s(),Xe=o("img"),_l=s(),ya=o("p"),El=t("The layers can be toggled on and off. They can also be dragged into different orders, the top layer on the panel will always be the layer that is shown on top on the map."),Il=s(),K=o("p"),Sl=t("We can change the colours and style of each layer by right-clicking on a layer, going to "),va=o("i"),kl=t("Properties"),Tl=t(", and then "),ba=o("i"),Ll=t("Symbology"),Gl=t(". In the image above, I changed the colours of the two vector layers, as well as the stroke-width of the Centreline layer."),Pl=s(),x=o("p"),Cl=t("Let's explore how we can select and filter data. We'll use the Centreline layer as an example. Right-clicking they layer allows us to view it's attribute table. There is a column in here called "),wa=o("code"),Al=t("FEATURE_00"),Rl=t(" which indicates the type of feature. Right-click and open up the "),_a=o("i"),Ol=t("Properties"),Dl=t(" of the layer, then click "),Ea=o("i"),Ml=t("Source"),zl=t(", and play with filtering the data. e.g. this is a query for filtering to only show laneways "),Ia=o("code"),Wl=t(`"FEATURE_00" = 'Laneway'`),xl=s(),S=o("p"),ql=t("We can also visualize data based on values in the attribute table. First clear the above query. Then in the CentreLine "),Sa=o("i"),jl=t("Properties"),Ul=t(", go to "),ka=o("i"),Nl=t("Symbology"),Ql=t(", then at the top, select "),Ta=o("i"),Bl=t("Categorized"),Hl=t(". Try selecting "),La=o("i"),Vl=t("FEATURE_00"),Fl=t(" again. Click "),Ga=o("i"),Jl=t("Classify"),Yl=t(" at the bottom of the window. We can now quickly visualize where different features are on the map! Each category can also be styled individually be turned off and on in the layers panel."),$l=s(),Ze=o("img"),Kl=s(),k=o("p"),Xl=t("Now let's learn how to visualize data based on numeric data. We can use the bike share station data for this. Download and load this dataset into QGIS. Then go to it's "),Pa=o("i"),Zl=t("Properties"),es=t(", "),Ca=o("i"),ts=t("Symbology"),as=t(", then at the top, select "),Aa=o("i"),os=t("Graduated"),rs=t(". In this menu, we can color the points based on a numeric value in a column. Let's colour by the "),Ra=o("code"),is=t("capacity"),ls=t(" column (this is the number of bikes that can be stored at each docking station). Notice the options available for classifying data (number of bins, whether to use quantiles or equal intervals, etc.). Hit "),Oa=o("i"),ss=t("Classify"),ns=t(" to update the map. Note how different classification schemes can highlight or hide different spatial patterns."),hs=s(),et=o("img"),ds=s(),m=o("div"),Da=o("h2"),cs=t("Tutorial (2)"),ps=s(),Ma=o("h3"),fs=t("Table Joins and Choropleths"),us=s(),Pe=o("p"),gs=t("Start up a new QGIS project and add in the data downloaded from "),Ce=o("a"),ms=t("here"),ys=t("."),vs=s(),X=o("p"),bs=t("First, let's look at data. We have a polygon layer which represents census tracts. These data are created by Statistics Canada to share aggregated for the Canadian census. They approximately correspond to neighbourhoods. Census tract boundary data were originally downloaded from "),Ae=o("a"),ws=t("here"),_s=t(", while attribute data were downloaded from "),Re=o("a"),Es=t("here"),Is=t("."),Ss=s(),Oe=o("p"),ks=t("We also have a line layer representing major transit lines in Toronto (originally sourced from Metrolinx). We can categorize line data by "),za=o("code"),Ts=t("status"),Ls=t(", using different colours or line types to display whether the transit route is existing or under construction. The screenshot below shows the result. (Also note how the map has been rotated 17.7 degrees, to horizontally align some of the features and reduce empty white space)."),Gs=s(),tt=o("img"),Ps=s(),I=o("p"),Cs=t("Also included is a "),Wa=o("code"),As=t(".csv"),Rs=t(" table which contains data linked to the unique identifier, "),xa=o("code"),Os=t("ctuid"),Ds=t(", of each census tract. We can use the "),qa=o("code"),Ms=t("ctuid"),zs=t(" to join this tabular data to the spatial boundaries of census tracts. Do so by, first adding the table as a layer into QGIS. Then open up the "),ja=o("i"),Ws=t("Properties"),xs=t(" of the censust tract polygon layer, and go to "),Ua=o("i"),qs=t("Joins"),js=t(". Add a new join, using "),Na=o("code"),Us=t("ctuid"),Ns=t(" as the source and target fields. Once complete, we can open up the attribute table and see these additional columns."),Qs=s(),De=o("p"),Bs=t("We can now visualize these polygons as a "),Me=o("a"),Hs=t("choropleth map"),Vs=t(" (maps where polygons are shaded by numeric attribute values). Similar to the previous tutorial, open up the layer properties, go to symbology, and style based on graduated symbols.  It's often preferred to visualize a choropleth as a rate or a density (in terms of people per area) in order not to exaggerate counts in larger areas."),Fs=s(),ze=o("p"),Js=t("(Note that a numeric column might be imported as a string. If this is the case, to convert to a number to visualize, click on the epsilon on the top-right, and use the "),Qa=o("code"),Ys=t("to_real()"),$s=t(" function to convert to a numeric value)."),Ks=s(),Ba=o("p"),Xs=t("For example, the following shows a choropleth map of the percent of people who live in low-income households by neighbourhood relative to major transit lines."),Zs=s(),at=o("img"),en=s(),Z=o("p"),tn=t("This map was exported by going to "),Ha=o("i"),an=t("Project"),on=t(", selecting "),Va=o("i"),rn=t("New Print Layout"),ln=t(", and then adding in a map view, legend, and scale bar to the blank page."),sn=s(),u=o("div"),Fa=o("h2"),nn=t("Tutorial (3)"),hn=s(),Ja=o("h3"),dn=t("Geoprocessing"),cn=s(),Ya=o("p"),pn=t("Next, we're going to learn a few commonly used geoprocessing tasks, using the following data:"),fn=s(),ee=o("ul"),ot=o("li"),We=o("a"),un=t("Street Centrelines"),gn=t(" (same as in tutorial 1)."),mn=s(),rt=o("li"),xe=o("a"),yn=t("Public Libraries"),vn=t("."),bn=s(),he=o("li"),qe=o("a"),wn=t("Apartment Buildings"),_n=t(" (originally geocoded from the City's apartment building registration and evaluation data on "),je=o("a"),En=t("Open Data Toronto"),In=t(")."),Sn=s(),$a=o("h4"),kn=t("Projections and re-projecting data"),Tn=s(),Ue=o("p"),Ln=t("All spatial data include location data, typically in the form of coordinates. A "),it=o("a"),Gn=t("Coordinate Reference System (CRS)"),Pn=t(" is a framework/schema for referencing where features are on the earth's surface. Each CRS has units (e.g. degrees, metres, etc.). When working with urban data, we often want to have data in a CRS that does not distort local areas or distances, and has intuitive units (e.g. working with distances in metres rather than in degrees)."),Cn=s(),R=o("p"),An=t("To change the CRS of a vector layer, go to "),Ka=o("i"),Rn=t("Vector"),On=t(", "),Xa=o("i"),Dn=t("Data Management Tools"),Mn=t(", then click "),Za=o("i"),zn=t("Reproject Layer"),Wn=t(". Try converting the public libraries dataset into "),eo=o("code"),xn=t("NAD83 / UTM zone 17N - EPSG:26917"),qn=t(". This is a commonly used CRS for the Toronto region with units in metres."),jn=s(),to=o("h4"),Un=t("Buffers"),Nn=s(),O=o("p"),Qn=t("Using our reprojected layer, try creating 1km buffers around the location of public libraries. At the top of the QGIS menu, go to "),ao=o("i"),Bn=t("Vector"),Hn=t(", "),oo=o("i"),Vn=t("Geoprocessing Tools"),Fn=t(", then click "),ro=o("i"),Jn=t("Buffer"),Yn=t(". Select the public libraries as the input layer, and "),io=o("code"),$n=t("1000"),Kn=t(" metres as the distance. We can quickly see where people have easy access to public libraries in the city."),Xn=s(),lt=o("img"),Zn=s(),lo=o("h4"),eh=t("Select by Location"),th=s(),D=o("p"),ah=t("This can become more useful when we compare it to other layers. Let's try to find the public housing apartment buildings in Toronto that are not within 1km to a public library. We can do this first by filtering the apartment buildings dataset by their property type "),so=o("code"),oh=t(`"A_PROPERTY_TYPE"='SOCIAL HOUSING' OR "A_PROPERTY_TYPE"='TCHC'`),rh=t(". Then go to "),no=o("i"),ih=t("Vector"),lh=t(", "),ho=o("i"),sh=t("Research Tools"),nh=t(", then click "),co=o("i"),hh=t("Select by Location"),dh=t(". Here we can select the apartments that intersect the buffers. Inverting this selection will highlight the apartment buildings that are NOT within a 1km from a public library, 144 in total."),ch=s(),st=o("img"),this.h()},l(_){const M=Xc("svelte-1xs4wlw",document.head);oe=r(M,"LINK",{rel:!0,href:!0}),fe=r(M,"LINK",{rel:!0,href:!0,crossorigin:!0}),Ne=r(M,"LINK",{href:!0,rel:!0}),Qe=r(M,"LINK",{href:!0,rel:!0}),Be=r(M,"META",{name:!0,content:!0}),He=r(M,"META",{name:!0,content:!0}),Ve=r(M,"META",{name:!0,content:!0}),M.forEach(i),uo=n(_),Zc(ue.$$.fragment,_),go=n(_),w=r(_,"MAIN",{});var P=l(w);z=r(P,"DIV",{id:!0});var de=l(z);ft=r(de,"H1",{});var Ch=l(ft);Lo=a(Ch,"(Q)GIS WORKSHOP"),Ch.forEach(i),Go=n(de),ut=r(de,"P",{});var Ah=l(ut);Po=a(Ah,"For MUI2000"),Ah.forEach(i),Co=n(de),gt=r(de,"P",{});var Rh=l(gt);Ao=a(Rh,"By Jeff Allen"),Rh.forEach(i),Ro=n(de),mt=r(de,"P",{});var Oh=l(mt);Oo=a(Oh,"On January 23 & 30, 2023"),Oh.forEach(i),de.forEach(i),Do=n(P),T=r(P,"DIV",{id:!0});var B=l(T);yt=r(B,"P",{});var Dh=l(yt);Mo=a(Dh,"We use Geographic Information Systems (GIS) to analyze, manipulate, and visualize spatial information on a computer."),Dh.forEach(i),zo=n(B),vt=r(B,"P",{});var Mh=l(vt);Wo=a(Mh,"Why is GIS useful?"),Mh.forEach(i),xo=n(B),L=r(B,"UL",{class:!0});var H=l(L);bt=r(H,"LI",{});var zh=l(bt);qo=a(zh,"visualize spatial data"),zh.forEach(i),jo=n(H),wt=r(H,"LI",{});var Wh=l(wt);Uo=a(Wh,"explore spatial patterns and relationships"),Wh.forEach(i),No=n(H),_t=r(H,"LI",{});var xh=l(_t);Qo=a(xh,"make pretty and useful maps"),xh.forEach(i),Bo=n(H),Et=r(H,"LI",{});var qh=l(Et);Ho=a(qh,'generate new data, either "by hand" or via spatial relationships from other data (e.g. through spatial queries)'),qh.forEach(i),Vo=n(H),It=r(H,"LI",{});var jh=l(It);Fo=a(jh,"perform spatial analysis (i.e. statistical methods applied to spatial data)"),jh.forEach(i),H.forEach(i),Jo=n(B),St=r(B,"P",{});var Uh=l(St);Yo=a(Uh,"GIS is often thought of as more than just a tool or piece of software. It can refer to all aspects of managing and analyzing digital spatially referenced data."),Uh.forEach(i),$o=n(B),ge=r(B,"P",{});var yo=l(ge);Ko=a(yo,"The following provides a brief overview of GIS followed by two short tutorials for getting started with GIS, using "),me=r(yo,"A",{href:!0,target:!0});var Nh=l(me);Xo=a(Nh,"QGIS"),Nh.forEach(i),Zo=a(yo,", a free and open source desktop GIS software. The first tutorial uses data from the City of Toronto's Open Data portal. The second analyzes demographic data from the Canadian census as well as public transit data for Toronto"),yo.forEach(i),B.forEach(i),er=n(P),d=r(P,"DIV",{id:!0});var p=l(d);kt=r(p,"H2",{});var Qh=l(kt);tr=a(Qh,"Spatial Data"),Qh.forEach(i),ar=n(p),Tt=r(p,"P",{});var Bh=l(Tt);or=a(Bh,"A spatial dataset is a combination of..."),Bh.forEach(i),rr=n(p),re=r(p,"UL",{class:!0});var vo=l(re);Lt=r(vo,"LI",{});var Hh=l(Lt);ir=a(Hh,"attribute data (the what)"),Hh.forEach(i),lr=n(vo),Gt=r(vo,"LI",{});var Vh=l(Gt);sr=a(Vh,"location data and spatial dimensions (the where)"),Vh.forEach(i),vo.forEach(i),nr=n(p),Pt=r(p,"P",{});var Fh=l(Pt);hr=a(Fh,"Spatial data, this combination of attribute and location data, can be organized and represented in a number of different formats."),Fh.forEach(i),dr=n(p),Ct=r(p,"P",{});var Jh=l(Ct);cr=a(Jh,"For example, a city can be represented on a map via a single point with a label (e.g. based on latitude and longitude coordinates). Or a city can be represented as a polygon, based on on it's administrative boundary"),Jh.forEach(i),pr=n(p),At=r(p,"P",{});var Yh=l(At);fr=a(Yh,"Importantly, there are always uncertainty about the level of accuracy, precision, and resolution of spatial data. Spatial data are abstractions of reality, and thus have some loss of information when used for visualization and analysis. Any analysis can only be as good as the available data."),Yh.forEach(i),ur=n(p),$=r(p,"P",{});var nt=l($);gr=a(nt,"The two most common forms of spatial data are "),Rt=r(nt,"B",{});var $h=l(Rt);mr=a($h,"vector"),$h.forEach(i),yr=a(nt," data and "),Ot=r(nt,"B",{});var Kh=l(Ot);vr=a(Kh,"raster"),Kh.forEach(i),br=a(nt," data."),nt.forEach(i),wr=n(p),Dt=r(p,"H3",{});var Xh=l(Dt);_r=a(Xh,"Vector Data"),Xh.forEach(i),Er=n(p),Mt=r(p,"P",{});var Zh=l(Mt);Ir=a(Zh,"Vector data uses geographic coordinates, or a series of coordinates, to create points, lines, and polygons representing real-world features."),Zh.forEach(i),Sr=n(p),ye=r(p,"IMG",{width:!0,src:!0,alt:!0}),kr=n(p),ve=r(p,"P",{});var bo=l(ve);Tr=a(bo,"e.g. in the map below (a screenshot of "),be=r(bo,"A",{href:!0,target:!0});var ed=l(be);Lr=a(ed,"OpenStreetMap"),ed.forEach(i),Gr=a(bo,") lines are used to represent roads and rail, points for retail, polygons for parks and buildings, etc."),bo.forEach(i),Pr=n(p),we=r(p,"IMG",{width:!0,src:!0,alt:!0}),Cr=n(p),ie=r(p,"P",{});var po=l(ie);_e=r(po,"A",{href:!0,target:!0});var td=l(_e);Ar=a(td,"GeoJSON"),td.forEach(i),Rr=a(po," and the "),Ee=r(po,"A",{href:!0,target:!0});var ad=l(Ee);Or=a(ad,"Shapefile"),ad.forEach(i),Dr=a(po," are probably the two most common vector data formats."),po.forEach(i),Mr=n(p),zt=r(p,"H3",{});var od=l(zt);zr=a(od,"Raster Data"),od.forEach(i),Wr=n(p),Wt=r(p,"P",{});var rd=l(Wt);xr=a(rd,"Raster data represents space as a continuous grid with equal cell sizes. Each cell contains a value pertaining to the type of feature it represents. These values can be quantitative (e.g. elevation) or categorical (e.g. type of land use). Common examples of raster data include digital elevation models (DEMs), satellite imagery, and scanned images (e.g. historical maps)."),rd.forEach(i),qr=n(p),xt=r(p,"P",{});var id=l(xt);jr=a(id,"e.g. the map below shows a DEM for Toronto at two different scales."),id.forEach(i),Ur=n(p),Fe=r(p,"IMG",{src:!0,alt:!0}),p.forEach(i),Nr=n(P),g=r(P,"DIV",{id:!0});var v=l(g);qt=r(v,"H2",{});var ld=l(qt);Qr=a(ld,"GIS"),ld.forEach(i),Br=n(v),jt=r(v,"P",{});var sd=l(jt);Hr=a(sd,"The power of GIS software and tools is the ability to work with data stored in different layers (e.g. a layer for roads, another for buildings, and so on) in conjunction with each other. These layers can be visualized and analyzed relative to each other based on their spatial relationships."),sd.forEach(i),Vr=n(v),Ie=r(v,"IMG",{width:!0,src:!0,alt:!0}),Fr=n(v),Ut=r(v,"P",{});var nd=l(Ut);Jr=a(nd,"GIS software usually links to data stored elsewhere on a computer, rather than in a project file. If the source location of the data (i.e. which folder it's in) changes, then this will have to be updated in the GIS project. If data are edited in GIS, it will update the data in its source location."),nd.forEach(i),Yr=n(v),Nt=r(v,"H3",{});var hd=l(Nt);$r=a(hd,"Common Tools & Software"),hd.forEach(i),Kr=n(v),Qt=r(v,"P",{});var dd=l(Qt);Xr=a(dd,"Desktop GIS software"),dd.forEach(i),Zr=n(v),le=r(v,"UL",{class:!0});var wo=l(le);Bt=r(wo,"LI",{});var cd=l(Bt);ei=a(cd,"QGIS (free and open source, can do most tasks, popular in tech and academia and non-profits)"),cd.forEach(i),ti=n(wo),Ht=r(wo,"LI",{});var pd=l(Ht);ai=a(pd,"ArcGIS (proprietary, can do most tasks, used by big organizations)"),pd.forEach(i),wo.forEach(i),oi=n(v),Vt=r(v,"P",{});var fd=l(Vt);ri=a(fd,"Web-based GIS and mapping"),fd.forEach(i),ii=n(v),G=r(v,"UL",{class:!0});var V=l(G);Ft=r(V,"LI",{});var ud=l(Ft);li=a(ud,"MapBox (commercial, free basic accounts)"),ud.forEach(i),si=n(V),Jt=r(V,"LI",{});var gd=l(Jt);ni=a(gd,"CARTO (commercial)"),gd.forEach(i),hi=n(V),Yt=r(V,"LI",{});var md=l(Yt);di=a(md,"ArcGIS Online (commercial)"),md.forEach(i),ci=n(V),$t=r(V,"LI",{});var yd=l($t);pi=a(yd,"D3 (free, steeper learning curve)"),yd.forEach(i),fi=n(V),Kt=r(V,"LI",{});var vd=l(Kt);ui=a(vd,"Observable (free, steeper learning curve)"),vd.forEach(i),V.forEach(i),gi=n(v),Xt=r(v,"P",{});var bd=l(Xt);mi=a(bd,"GIS & Spatial analysis using code"),bd.forEach(i),yi=n(v),se=r(v,"UL",{class:!0});var _o=l(se);Zt=r(_o,"LI",{});var wd=l(Zt);vi=a(wd,"Python, R (for processing data, statistical analysis, making simple maps)"),wd.forEach(i),bi=n(_o),ea=r(_o,"LI",{});var _d=l(ea);wi=a(_d,"PostGIS (spatial databases and queries)"),_d.forEach(i),_o.forEach(i),_i=n(v),ta=r(v,"P",{});var Ed=l(ta);Ei=a(Ed,"Many more!"),Ed.forEach(i),v.forEach(i),Ii=n(P),c=r(P,"DIV",{id:!0});var f=l(c);aa=r(f,"H2",{});var Id=l(aa);Si=a(Id,"Tutorial (1)"),Id.forEach(i),ki=n(f),oa=r(f,"H3",{});var Sd=l(oa);Ti=a(Sd,"Loading, Querying, and Visualizing Data"),Sd.forEach(i),Li=n(f),ra=r(f,"P",{});var kd=l(ra);Gi=a(kd,`Let's open up QGIS with a blank project. The top bars are various functions/tools for working with data. The "Browser" allows for navigating and loading datasets. The "Layers" panel will populate with each dataset that is added to the project. And the big blank square is where your map data will be visualized.`),kd.forEach(i),Pi=n(f),Je=r(f,"IMG",{src:!0,alt:!0}),Ci=n(f),ia=r(f,"P",{});var Td=l(ia);Ai=a(Td,"Let's begin by finding data from the City of Toronto's Open Data portal and loading it into QGIS. This is the data we'll be looking at:"),Td.forEach(i),Ri=n(f),N=r(f,"UL",{});var ce=l(N);Ye=r(ce,"LI",{});var ph=l(Ye);Se=r(ph,"A",{href:!0,target:!0});var Ld=l(Se);Oi=a(Ld,"Business Improvement Areas (BIA)"),Ld.forEach(i),Di=a(ph,"."),ph.forEach(i),Mi=n(ce),$e=r(ce,"LI",{});var fh=l($e);ke=r(fh,"A",{href:!0,target:!0});var Gd=l(ke);zi=a(Gd,"Street Centrelines"),Gd.forEach(i),Wi=a(fh," (streets, railways, trails, etc.)."),fh.forEach(i),xi=n(ce),Ke=r(ce,"LI",{});var uh=l(Ke);Te=r(uh,"A",{href:!0,target:!0});var Pd=l(Te);qi=a(Pd,"Aerial Imagery"),Pd.forEach(i),ji=a(uh,". We'll be adding the most recent imagery layer."),uh.forEach(i),Ui=n(ce),W=r(ce,"LI",{});var te=l(W);Le=r(te,"A",{href:!0,target:!0});var Cd=l(Le);Ni=a(Cd,"Bike Share Stations"),Cd.forEach(i),Qi=a(te,'. This data are a "live" '),la=r(te,"CODE",{});var Ad=l(la);Bi=a(Ad,"json"),Ad.forEach(i),Hi=a(te," feed, I've scraped it with this "),Ge=r(te,"A",{href:!0,target:!0});var Rd=l(Ge);Vi=a(Rd,"script"),Rd.forEach(i),Fi=a(te,", the result can be downloaded from "),ne=r(te,"A",{href:!0,target:!0,download:!0});var Od=l(ne);Ji=a(Od,"here"),Od.forEach(i),Yi=a(te,` (if this link doesn't download directly, you can copy and paste the content into a text editor, or just "save as" the web page).`),te.forEach(i),ce.forEach(i),$i=n(f),E=r(f,"P",{});var C=l(E);Ki=a(C,"Let's start by loading in the aerial imagery as a base layer. This is a raster dataset (each cell/pixel has a colour value) stored on the City's server. It can be loaded into QGIS by right-clicking on "),sa=r(C,"I",{});var Dd=l(sa);Xi=a(Dd,"WMS/WMTS"),Dd.forEach(i),Zi=a(C," layer in the browser panel and adding a "),na=r(C,"I",{});var Md=l(na);el=a(Md,"New Connection"),Md.forEach(i),tl=a(C," or by going to "),ha=r(C,"I",{});var zd=l(ha);al=a(zd,"Layer"),zd.forEach(i),ol=a(C,", then "),da=r(C,"I",{});var Wd=l(da);rl=a(Wd,"Data Source Manager"),Wd.forEach(i),il=a(C," and navigating to "),ca=r(C,"I",{});var xd=l(ca);ll=a(xd,"WMS/WMTS"),xd.forEach(i),sl=a(C,". Once there, add in this URL "),pa=r(C,"CODE",{});var qd=l(pa);nl=a(qd,"https://gis.toronto.ca/arcgis/rest/services/basemap/cot_ortho/MapServer/WMTS"),qd.forEach(i),hl=a(C," and provide a descriptive name for the layer.."),C.forEach(i),dl=n(f),Q=r(f,"P",{});var pe=l(Q);cl=a(pe,"Now let's add the BIA and CentreLine data. Download these from the links provided above. They can be added into QGIS either by dragging and dropping them from your file manager onto the map or layers panel. Or they can be added by "),fa=r(pe,"I",{});var jd=l(fa);pl=a(jd,"Layer"),jd.forEach(i),fl=a(pe,", then "),ua=r(pe,"I",{});var Ud=l(ua);ul=a(Ud,"Data Source Manager"),Ud.forEach(i),gl=a(pe,", and navigating to "),ga=r(pe,"I",{});var Nd=l(ga);ml=a(Nd,'Vector"'),Nd.forEach(i),yl=a(pe,"."),pe.forEach(i),vl=n(f),ma=r(f,"P",{});var Qd=l(ma);bl=a(Qd,"Once added, your map should look something like this:"),Qd.forEach(i),wl=n(f),Xe=r(f,"IMG",{src:!0,alt:!0}),_l=n(f),ya=r(f,"P",{});var Bd=l(ya);El=a(Bd,"The layers can be toggled on and off. They can also be dragged into different orders, the top layer on the panel will always be the layer that is shown on top on the map."),Bd.forEach(i),Il=n(f),K=r(f,"P",{});var ht=l(K);Sl=a(ht,"We can change the colours and style of each layer by right-clicking on a layer, going to "),va=r(ht,"I",{});var Hd=l(va);kl=a(Hd,"Properties"),Hd.forEach(i),Tl=a(ht,", and then "),ba=r(ht,"I",{});var Vd=l(ba);Ll=a(Vd,"Symbology"),Vd.forEach(i),Gl=a(ht,". In the image above, I changed the colours of the two vector layers, as well as the stroke-width of the Centreline layer."),ht.forEach(i),Pl=n(f),x=r(f,"P",{});var ae=l(x);Cl=a(ae,"Let's explore how we can select and filter data. We'll use the Centreline layer as an example. Right-clicking they layer allows us to view it's attribute table. There is a column in here called "),wa=r(ae,"CODE",{});var Fd=l(wa);Al=a(Fd,"FEATURE_00"),Fd.forEach(i),Rl=a(ae," which indicates the type of feature. Right-click and open up the "),_a=r(ae,"I",{});var Jd=l(_a);Ol=a(Jd,"Properties"),Jd.forEach(i),Dl=a(ae," of the layer, then click "),Ea=r(ae,"I",{});var Yd=l(Ea);Ml=a(Yd,"Source"),Yd.forEach(i),zl=a(ae,", and play with filtering the data. e.g. this is a query for filtering to only show laneways "),Ia=r(ae,"CODE",{});var $d=l(Ia);Wl=a($d,`"FEATURE_00" = 'Laneway'`),$d.forEach(i),ae.forEach(i),xl=n(f),S=r(f,"P",{});var q=l(S);ql=a(q,"We can also visualize data based on values in the attribute table. First clear the above query. Then in the CentreLine "),Sa=r(q,"I",{});var Kd=l(Sa);jl=a(Kd,"Properties"),Kd.forEach(i),Ul=a(q,", go to "),ka=r(q,"I",{});var Xd=l(ka);Nl=a(Xd,"Symbology"),Xd.forEach(i),Ql=a(q,", then at the top, select "),Ta=r(q,"I",{});var Zd=l(Ta);Bl=a(Zd,"Categorized"),Zd.forEach(i),Hl=a(q,". Try selecting "),La=r(q,"I",{});var ec=l(La);Vl=a(ec,"FEATURE_00"),ec.forEach(i),Fl=a(q," again. Click "),Ga=r(q,"I",{});var tc=l(Ga);Jl=a(tc,"Classify"),tc.forEach(i),Yl=a(q," at the bottom of the window. We can now quickly visualize where different features are on the map! Each category can also be styled individually be turned off and on in the layers panel."),q.forEach(i),$l=n(f),Ze=r(f,"IMG",{src:!0,alt:!0}),Kl=n(f),k=r(f,"P",{});var j=l(k);Xl=a(j,"Now let's learn how to visualize data based on numeric data. We can use the bike share station data for this. Download and load this dataset into QGIS. Then go to it's "),Pa=r(j,"I",{});var ac=l(Pa);Zl=a(ac,"Properties"),ac.forEach(i),es=a(j,", "),Ca=r(j,"I",{});var oc=l(Ca);ts=a(oc,"Symbology"),oc.forEach(i),as=a(j,", then at the top, select "),Aa=r(j,"I",{});var rc=l(Aa);os=a(rc,"Graduated"),rc.forEach(i),rs=a(j,". In this menu, we can color the points based on a numeric value in a column. Let's colour by the "),Ra=r(j,"CODE",{});var ic=l(Ra);is=a(ic,"capacity"),ic.forEach(i),ls=a(j," column (this is the number of bikes that can be stored at each docking station). Notice the options available for classifying data (number of bins, whether to use quantiles or equal intervals, etc.). Hit "),Oa=r(j,"I",{});var lc=l(Oa);ss=a(lc,"Classify"),lc.forEach(i),ns=a(j," to update the map. Note how different classification schemes can highlight or hide different spatial patterns."),j.forEach(i),hs=n(f),et=r(f,"IMG",{src:!0,alt:!0}),f.forEach(i),ds=n(P),m=r(P,"DIV",{id:!0});var b=l(m);Da=r(b,"H2",{});var sc=l(Da);cs=a(sc,"Tutorial (2)"),sc.forEach(i),ps=n(b),Ma=r(b,"H3",{});var nc=l(Ma);fs=a(nc,"Table Joins and Choropleths"),nc.forEach(i),us=n(b),Pe=r(b,"P",{});var Eo=l(Pe);gs=a(Eo,"Start up a new QGIS project and add in the data downloaded from "),Ce=r(Eo,"A",{href:!0,target:!0});var hc=l(Ce);ms=a(hc,"here"),hc.forEach(i),ys=a(Eo,"."),Eo.forEach(i),vs=n(b),X=r(b,"P",{});var dt=l(X);bs=a(dt,"First, let's look at data. We have a polygon layer which represents census tracts. These data are created by Statistics Canada to share aggregated for the Canadian census. They approximately correspond to neighbourhoods. Census tract boundary data were originally downloaded from "),Ae=r(dt,"A",{href:!0,target:!0});var dc=l(Ae);ws=a(dc,"here"),dc.forEach(i),_s=a(dt,", while attribute data were downloaded from "),Re=r(dt,"A",{href:!0,target:!0});var cc=l(Re);Es=a(cc,"here"),cc.forEach(i),Is=a(dt,"."),dt.forEach(i),Ss=n(b),Oe=r(b,"P",{});var Io=l(Oe);ks=a(Io,"We also have a line layer representing major transit lines in Toronto (originally sourced from Metrolinx). We can categorize line data by "),za=r(Io,"CODE",{});var pc=l(za);Ts=a(pc,"status"),pc.forEach(i),Ls=a(Io,", using different colours or line types to display whether the transit route is existing or under construction. The screenshot below shows the result. (Also note how the map has been rotated 17.7 degrees, to horizontally align some of the features and reduce empty white space)."),Io.forEach(i),Gs=n(b),tt=r(b,"IMG",{src:!0,alt:!0}),Ps=n(b),I=r(b,"P",{});var A=l(I);Cs=a(A,"Also included is a "),Wa=r(A,"CODE",{});var fc=l(Wa);As=a(fc,".csv"),fc.forEach(i),Rs=a(A," table which contains data linked to the unique identifier, "),xa=r(A,"CODE",{});var uc=l(xa);Os=a(uc,"ctuid"),uc.forEach(i),Ds=a(A,", of each census tract. We can use the "),qa=r(A,"CODE",{});var gc=l(qa);Ms=a(gc,"ctuid"),gc.forEach(i),zs=a(A," to join this tabular data to the spatial boundaries of census tracts. Do so by, first adding the table as a layer into QGIS. Then open up the "),ja=r(A,"I",{});var mc=l(ja);Ws=a(mc,"Properties"),mc.forEach(i),xs=a(A," of the censust tract polygon layer, and go to "),Ua=r(A,"I",{});var yc=l(Ua);qs=a(yc,"Joins"),yc.forEach(i),js=a(A,". Add a new join, using "),Na=r(A,"CODE",{});var vc=l(Na);Us=a(vc,"ctuid"),vc.forEach(i),Ns=a(A," as the source and target fields. Once complete, we can open up the attribute table and see these additional columns."),A.forEach(i),Qs=n(b),De=r(b,"P",{});var So=l(De);Bs=a(So,"We can now visualize these polygons as a "),Me=r(So,"A",{href:!0,target:!0});var bc=l(Me);Hs=a(bc,"choropleth map"),bc.forEach(i),Vs=a(So," (maps where polygons are shaded by numeric attribute values). Similar to the previous tutorial, open up the layer properties, go to symbology, and style based on graduated symbols.  It's often preferred to visualize a choropleth as a rate or a density (in terms of people per area) in order not to exaggerate counts in larger areas."),So.forEach(i),Fs=n(b),ze=r(b,"P",{});var ko=l(ze);Js=a(ko,"(Note that a numeric column might be imported as a string. If this is the case, to convert to a number to visualize, click on the epsilon on the top-right, and use the "),Qa=r(ko,"CODE",{});var wc=l(Qa);Ys=a(wc,"to_real()"),wc.forEach(i),$s=a(ko," function to convert to a numeric value)."),ko.forEach(i),Ks=n(b),Ba=r(b,"P",{});var _c=l(Ba);Xs=a(_c,"For example, the following shows a choropleth map of the percent of people who live in low-income households by neighbourhood relative to major transit lines."),_c.forEach(i),Zs=n(b),at=r(b,"IMG",{src:!0,alt:!0}),en=n(b),Z=r(b,"P",{});var ct=l(Z);tn=a(ct,"This map was exported by going to "),Ha=r(ct,"I",{});var Ec=l(Ha);an=a(Ec,"Project"),Ec.forEach(i),on=a(ct,", selecting "),Va=r(ct,"I",{});var Ic=l(Va);rn=a(Ic,"New Print Layout"),Ic.forEach(i),ln=a(ct,", and then adding in a map view, legend, and scale bar to the blank page."),ct.forEach(i),b.forEach(i),sn=n(P),u=r(P,"DIV",{id:!0});var y=l(u);Fa=r(y,"H2",{});var Sc=l(Fa);nn=a(Sc,"Tutorial (3)"),Sc.forEach(i),hn=n(y),Ja=r(y,"H3",{});var kc=l(Ja);dn=a(kc,"Geoprocessing"),kc.forEach(i),cn=n(y),Ya=r(y,"P",{});var Tc=l(Ya);pn=a(Tc,"Next, we're going to learn a few commonly used geoprocessing tasks, using the following data:"),Tc.forEach(i),fn=n(y),ee=r(y,"UL",{});var pt=l(ee);ot=r(pt,"LI",{});var gh=l(ot);We=r(gh,"A",{href:!0,target:!0});var Lc=l(We);un=a(Lc,"Street Centrelines"),Lc.forEach(i),gn=a(gh," (same as in tutorial 1)."),gh.forEach(i),mn=n(pt),rt=r(pt,"LI",{});var mh=l(rt);xe=r(mh,"A",{href:!0,target:!0});var Gc=l(xe);yn=a(Gc,"Public Libraries"),Gc.forEach(i),vn=a(mh,"."),mh.forEach(i),bn=n(pt),he=r(pt,"LI",{});var fo=l(he);qe=r(fo,"A",{href:!0,target:!0});var Pc=l(qe);wn=a(Pc,"Apartment Buildings"),Pc.forEach(i),_n=a(fo," (originally geocoded from the City's apartment building registration and evaluation data on "),je=r(fo,"A",{href:!0,target:!0});var Cc=l(je);En=a(Cc,"Open Data Toronto"),Cc.forEach(i),In=a(fo,")."),fo.forEach(i),pt.forEach(i),Sn=n(y),$a=r(y,"H4",{});var Ac=l($a);kn=a(Ac,"Projections and re-projecting data"),Ac.forEach(i),Tn=n(y),Ue=r(y,"P",{});var To=l(Ue);Ln=a(To,"All spatial data include location data, typically in the form of coordinates. A "),it=r(To,"A",{href:!0});var Rc=l(it);Gn=a(Rc,"Coordinate Reference System (CRS)"),Rc.forEach(i),Pn=a(To," is a framework/schema for referencing where features are on the earth's surface. Each CRS has units (e.g. degrees, metres, etc.). When working with urban data, we often want to have data in a CRS that does not distort local areas or distances, and has intuitive units (e.g. working with distances in metres rather than in degrees)."),To.forEach(i),Cn=n(y),R=r(y,"P",{});var F=l(R);An=a(F,"To change the CRS of a vector layer, go to "),Ka=r(F,"I",{});var Oc=l(Ka);Rn=a(Oc,"Vector"),Oc.forEach(i),On=a(F,", "),Xa=r(F,"I",{});var Dc=l(Xa);Dn=a(Dc,"Data Management Tools"),Dc.forEach(i),Mn=a(F,", then click "),Za=r(F,"I",{});var Mc=l(Za);zn=a(Mc,"Reproject Layer"),Mc.forEach(i),Wn=a(F,". Try converting the public libraries dataset into "),eo=r(F,"CODE",{});var zc=l(eo);xn=a(zc,"NAD83 / UTM zone 17N - EPSG:26917"),zc.forEach(i),qn=a(F,". This is a commonly used CRS for the Toronto region with units in metres."),F.forEach(i),jn=n(y),to=r(y,"H4",{});var Wc=l(to);Un=a(Wc,"Buffers"),Wc.forEach(i),Nn=n(y),O=r(y,"P",{});var J=l(O);Qn=a(J,"Using our reprojected layer, try creating 1km buffers around the location of public libraries. At the top of the QGIS menu, go to "),ao=r(J,"I",{});var xc=l(ao);Bn=a(xc,"Vector"),xc.forEach(i),Hn=a(J,", "),oo=r(J,"I",{});var qc=l(oo);Vn=a(qc,"Geoprocessing Tools"),qc.forEach(i),Fn=a(J,", then click "),ro=r(J,"I",{});var jc=l(ro);Jn=a(jc,"Buffer"),jc.forEach(i),Yn=a(J,". Select the public libraries as the input layer, and "),io=r(J,"CODE",{});var Uc=l(io);$n=a(Uc,"1000"),Uc.forEach(i),Kn=a(J," metres as the distance. We can quickly see where people have easy access to public libraries in the city."),J.forEach(i),Xn=n(y),lt=r(y,"IMG",{src:!0,alt:!0}),Zn=n(y),lo=r(y,"H4",{});var Nc=l(lo);eh=a(Nc,"Select by Location"),Nc.forEach(i),th=n(y),D=r(y,"P",{});var Y=l(D);ah=a(Y,"This can become more useful when we compare it to other layers. Let's try to find the public housing apartment buildings in Toronto that are not within 1km to a public library. We can do this first by filtering the apartment buildings dataset by their property type "),so=r(Y,"CODE",{});var Qc=l(so);oh=a(Qc,`"A_PROPERTY_TYPE"='SOCIAL HOUSING' OR "A_PROPERTY_TYPE"='TCHC'`),Qc.forEach(i),rh=a(Y,". Then go to "),no=r(Y,"I",{});var Bc=l(no);ih=a(Bc,"Vector"),Bc.forEach(i),lh=a(Y,", "),ho=r(Y,"I",{});var Hc=l(ho);sh=a(Hc,"Research Tools"),Hc.forEach(i),nh=a(Y,", then click "),co=r(Y,"I",{});var Vc=l(co);hh=a(Vc,"Select by Location"),Vc.forEach(i),dh=a(Y,". Here we can select the apartments that intersect the buffers. Inverting this selection will highlight the apartment buildings that are NOT within a 1km from a public library, 144 in total."),Y.forEach(i),ch=n(y),st=r(y,"IMG",{src:!0,alt:!0}),y.forEach(i),P.forEach(i),this.h()},h(){h(oe,"rel","preconnect"),h(oe,"href","https://fonts.googleapis.com"),h(fe,"rel","preconnect"),h(fe,"href","https://fonts.gstatic.com"),h(fe,"crossorigin",""),h(Ne,"href","https://fonts.googleapis.com/css2?family=Source+Serif+Pro:ital,wght@0,400;0,700;1,400;1,700&display=swap"),h(Ne,"rel","stylesheet"),h(Qe,"href","https://fonts.googleapis.com/css2?family=Roboto&family=Source+Serif+Pro&display=swap"),h(Qe,"rel","stylesheet"),h(Be,"name","viewport"),h(Be,"content","width=device-width, initial-scale=1, minimum-scale=1"),document.title="GIS Workshop / MUI2000",h(He,"name","description"),h(He,"content","GIS workshop for MUI2000"),h(Ve,"name","author"),h(Ve,"content","Jeff Allen"),h(z,"id","title"),h(L,"class","list"),h(me,"href","https://www.qgis.org/en/site/"),h(me,"target","_blank"),h(T,"id","text"),h(re,"class","list"),h(ye,"width","400"),U(ye.src,vh=lp)||h(ye,"src",vh),h(ye,"alt","coords"),h(be,"href","https://www.openstreetmap.org/"),h(be,"target","_blank"),h(we,"width",""),U(we.src,bh=sp)||h(we,"src",bh),h(we,"alt","OpenStreetMap"),h(_e,"href","https://en.wikipedia.org/wiki/GeoJSON"),h(_e,"target","_blank"),h(Ee,"href","https://en.wikipedia.org/wiki/Shapefile"),h(Ee,"target","_blank"),U(Fe.src,wh=np)||h(Fe,"src",wh),h(Fe,"alt","DEM Toronto"),h(d,"id","text"),h(Ie,"width","350px"),U(Ie.src,_h=hp)||h(Ie,"src",_h),h(Ie,"alt","gis-layers"),h(le,"class","list"),h(G,"class","list"),h(se,"class","list"),h(g,"id","text"),U(Je.src,Eh=dp)||h(Je,"src",Eh),h(Je,"alt","qgis-blank"),h(Se,"href","https://open.toronto.ca/dataset/business-improvement-areas/"),h(Se,"target","_blank"),h(ke,"href","https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/1d079757-377b-4564-82df-eb5638583bfb/resource/d86bdca4-ab2c-470d-80fb-34647ea0e87f/download/Centreline%20-%20Version%202%20-%204326.zip"),h(ke,"target","_blank"),h(Te,"href","https://open.toronto.ca/dataset/web-map-services/"),h(Te,"target","_blank"),h(Le,"href","https://open.toronto.ca/dataset/bike-share-toronto/"),h(Le,"target","_blank"),h(Ge,"href","https://github.com/schoolofcities/mapping-workshops-2023/blob/main/data/download-bike-share.py"),h(Ge,"target","_blank"),h(ne,"href","https://raw.githubusercontent.com/schoolofcities/mapping-workshops-2023/main/data/bikeshare-stations.geojson"),h(ne,"target","_blank"),h(ne,"download",""),U(Xe.src,Ih=cp)||h(Xe,"src",Ih),h(Xe,"alt","qgis-layers1"),U(Ze.src,Sh=pp)||h(Ze,"src",Sh),h(Ze,"alt","qgis-centre"),U(et.src,kh=fp)||h(et,"src",kh),h(et,"alt","qgis-bikeshare"),h(c,"id","text"),h(Ce,"href","https://github.com/schoolofcities/mapping-workshops-2023/raw/main/data/toronto.zip"),h(Ce,"target","_blank"),h(Ae,"href","https://www12.statcan.gc.ca/census-recensement/2021/geo/sip-pis/boundary-limites/index2021-eng.cfm?year=21"),h(Ae,"target","_blank"),h(Re,"href","https://www12.statcan.gc.ca/census-recensement/2021/dp-pd/index-eng.cfm"),h(Re,"target","_blank"),U(tt.src,Th=up)||h(tt,"src",Th),h(tt,"alt","qgis-railct"),h(Me,"href","https://en.wikipedia.org/wiki/Choropleth_map"),h(Me,"target","_blank"),U(at.src,Lh=gp)||h(at,"src",Lh),h(at,"alt","qgis-choropleth"),h(m,"id","text"),h(We,"href","https://open.toronto.ca/dataset/toronto-centreline-tcl/"),h(We,"target","_blank"),h(xe,"href","https://open.toronto.ca/dataset/toronto-public-library-branch-locations/"),h(xe,"target","_blank"),h(qe,"href","https://github.com/schoolofcities/mapping-workshops-2023/raw/main/data/toronto-apartments.geojson"),h(qe,"target","_blank"),h(je,"href","https://open.toronto.ca/catalogue/?search=apartment%20buildings&sort=score%20desc"),h(je,"target","_blank"),h(it,"href","https://en.wikipedia.org/wiki/Spatial_reference_system"),U(lt.src,Gh=mp)||h(lt,"src",Gh),h(lt,"alt","qgis-buffer"),U(st.src,Ph=yp)||h(st,"src",Ph),h(st,"alt","qgis-bufferselect"),h(u,"id","text")},m(_,M){e(document.head,oe),e(document.head,fe),e(document.head,Ne),e(document.head,Qe),e(document.head,Be),e(document.head,He),e(document.head,Ve),yh(_,uo,M),ep(ue,_,M),yh(_,go,M),yh(_,w,M),e(w,z),e(z,ft),e(ft,Lo),e(z,Go),e(z,ut),e(ut,Po),e(z,Co),e(z,gt),e(gt,Ao),e(z,Ro),e(z,mt),e(mt,Oo),e(w,Do),e(w,T),e(T,yt),e(yt,Mo),e(T,zo),e(T,vt),e(vt,Wo),e(T,xo),e(T,L),e(L,bt),e(bt,qo),e(L,jo),e(L,wt),e(wt,Uo),e(L,No),e(L,_t),e(_t,Qo),e(L,Bo),e(L,Et),e(Et,Ho),e(L,Vo),e(L,It),e(It,Fo),e(T,Jo),e(T,St),e(St,Yo),e(T,$o),e(T,ge),e(ge,Ko),e(ge,me),e(me,Xo),e(ge,Zo),e(w,er),e(w,d),e(d,kt),e(kt,tr),e(d,ar),e(d,Tt),e(Tt,or),e(d,rr),e(d,re),e(re,Lt),e(Lt,ir),e(re,lr),e(re,Gt),e(Gt,sr),e(d,nr),e(d,Pt),e(Pt,hr),e(d,dr),e(d,Ct),e(Ct,cr),e(d,pr),e(d,At),e(At,fr),e(d,ur),e(d,$),e($,gr),e($,Rt),e(Rt,mr),e($,yr),e($,Ot),e(Ot,vr),e($,br),e(d,wr),e(d,Dt),e(Dt,_r),e(d,Er),e(d,Mt),e(Mt,Ir),e(d,Sr),e(d,ye),e(d,kr),e(d,ve),e(ve,Tr),e(ve,be),e(be,Lr),e(ve,Gr),e(d,Pr),e(d,we),e(d,Cr),e(d,ie),e(ie,_e),e(_e,Ar),e(ie,Rr),e(ie,Ee),e(Ee,Or),e(ie,Dr),e(d,Mr),e(d,zt),e(zt,zr),e(d,Wr),e(d,Wt),e(Wt,xr),e(d,qr),e(d,xt),e(xt,jr),e(d,Ur),e(d,Fe),e(w,Nr),e(w,g),e(g,qt),e(qt,Qr),e(g,Br),e(g,jt),e(jt,Hr),e(g,Vr),e(g,Ie),e(g,Fr),e(g,Ut),e(Ut,Jr),e(g,Yr),e(g,Nt),e(Nt,$r),e(g,Kr),e(g,Qt),e(Qt,Xr),e(g,Zr),e(g,le),e(le,Bt),e(Bt,ei),e(le,ti),e(le,Ht),e(Ht,ai),e(g,oi),e(g,Vt),e(Vt,ri),e(g,ii),e(g,G),e(G,Ft),e(Ft,li),e(G,si),e(G,Jt),e(Jt,ni),e(G,hi),e(G,Yt),e(Yt,di),e(G,ci),e(G,$t),e($t,pi),e(G,fi),e(G,Kt),e(Kt,ui),e(g,gi),e(g,Xt),e(Xt,mi),e(g,yi),e(g,se),e(se,Zt),e(Zt,vi),e(se,bi),e(se,ea),e(ea,wi),e(g,_i),e(g,ta),e(ta,Ei),e(w,Ii),e(w,c),e(c,aa),e(aa,Si),e(c,ki),e(c,oa),e(oa,Ti),e(c,Li),e(c,ra),e(ra,Gi),e(c,Pi),e(c,Je),e(c,Ci),e(c,ia),e(ia,Ai),e(c,Ri),e(c,N),e(N,Ye),e(Ye,Se),e(Se,Oi),e(Ye,Di),e(N,Mi),e(N,$e),e($e,ke),e(ke,zi),e($e,Wi),e(N,xi),e(N,Ke),e(Ke,Te),e(Te,qi),e(Ke,ji),e(N,Ui),e(N,W),e(W,Le),e(Le,Ni),e(W,Qi),e(W,la),e(la,Bi),e(W,Hi),e(W,Ge),e(Ge,Vi),e(W,Fi),e(W,ne),e(ne,Ji),e(W,Yi),e(c,$i),e(c,E),e(E,Ki),e(E,sa),e(sa,Xi),e(E,Zi),e(E,na),e(na,el),e(E,tl),e(E,ha),e(ha,al),e(E,ol),e(E,da),e(da,rl),e(E,il),e(E,ca),e(ca,ll),e(E,sl),e(E,pa),e(pa,nl),e(E,hl),e(c,dl),e(c,Q),e(Q,cl),e(Q,fa),e(fa,pl),e(Q,fl),e(Q,ua),e(ua,ul),e(Q,gl),e(Q,ga),e(ga,ml),e(Q,yl),e(c,vl),e(c,ma),e(ma,bl),e(c,wl),e(c,Xe),e(c,_l),e(c,ya),e(ya,El),e(c,Il),e(c,K),e(K,Sl),e(K,va),e(va,kl),e(K,Tl),e(K,ba),e(ba,Ll),e(K,Gl),e(c,Pl),e(c,x),e(x,Cl),e(x,wa),e(wa,Al),e(x,Rl),e(x,_a),e(_a,Ol),e(x,Dl),e(x,Ea),e(Ea,Ml),e(x,zl),e(x,Ia),e(Ia,Wl),e(c,xl),e(c,S),e(S,ql),e(S,Sa),e(Sa,jl),e(S,Ul),e(S,ka),e(ka,Nl),e(S,Ql),e(S,Ta),e(Ta,Bl),e(S,Hl),e(S,La),e(La,Vl),e(S,Fl),e(S,Ga),e(Ga,Jl),e(S,Yl),e(c,$l),e(c,Ze),e(c,Kl),e(c,k),e(k,Xl),e(k,Pa),e(Pa,Zl),e(k,es),e(k,Ca),e(Ca,ts),e(k,as),e(k,Aa),e(Aa,os),e(k,rs),e(k,Ra),e(Ra,is),e(k,ls),e(k,Oa),e(Oa,ss),e(k,ns),e(c,hs),e(c,et),e(w,ds),e(w,m),e(m,Da),e(Da,cs),e(m,ps),e(m,Ma),e(Ma,fs),e(m,us),e(m,Pe),e(Pe,gs),e(Pe,Ce),e(Ce,ms),e(Pe,ys),e(m,vs),e(m,X),e(X,bs),e(X,Ae),e(Ae,ws),e(X,_s),e(X,Re),e(Re,Es),e(X,Is),e(m,Ss),e(m,Oe),e(Oe,ks),e(Oe,za),e(za,Ts),e(Oe,Ls),e(m,Gs),e(m,tt),e(m,Ps),e(m,I),e(I,Cs),e(I,Wa),e(Wa,As),e(I,Rs),e(I,xa),e(xa,Os),e(I,Ds),e(I,qa),e(qa,Ms),e(I,zs),e(I,ja),e(ja,Ws),e(I,xs),e(I,Ua),e(Ua,qs),e(I,js),e(I,Na),e(Na,Us),e(I,Ns),e(m,Qs),e(m,De),e(De,Bs),e(De,Me),e(Me,Hs),e(De,Vs),e(m,Fs),e(m,ze),e(ze,Js),e(ze,Qa),e(Qa,Ys),e(ze,$s),e(m,Ks),e(m,Ba),e(Ba,Xs),e(m,Zs),e(m,at),e(m,en),e(m,Z),e(Z,tn),e(Z,Ha),e(Ha,an),e(Z,on),e(Z,Va),e(Va,rn),e(Z,ln),e(w,sn),e(w,u),e(u,Fa),e(Fa,nn),e(u,hn),e(u,Ja),e(Ja,dn),e(u,cn),e(u,Ya),e(Ya,pn),e(u,fn),e(u,ee),e(ee,ot),e(ot,We),e(We,un),e(ot,gn),e(ee,mn),e(ee,rt),e(rt,xe),e(xe,yn),e(rt,vn),e(ee,bn),e(ee,he),e(he,qe),e(qe,wn),e(he,_n),e(he,je),e(je,En),e(he,In),e(u,Sn),e(u,$a),e($a,kn),e(u,Tn),e(u,Ue),e(Ue,Ln),e(Ue,it),e(it,Gn),e(Ue,Pn),e(u,Cn),e(u,R),e(R,An),e(R,Ka),e(Ka,Rn),e(R,On),e(R,Xa),e(Xa,Dn),e(R,Mn),e(R,Za),e(Za,zn),e(R,Wn),e(R,eo),e(eo,xn),e(R,qn),e(u,jn),e(u,to),e(to,Un),e(u,Nn),e(u,O),e(O,Qn),e(O,ao),e(ao,Bn),e(O,Hn),e(O,oo),e(oo,Vn),e(O,Fn),e(O,ro),e(ro,Jn),e(O,Yn),e(O,io),e(io,$n),e(O,Kn),e(u,Xn),e(u,lt),e(u,Zn),e(u,lo),e(lo,eh),e(u,th),e(u,D),e(D,ah),e(D,so),e(so,oh),e(D,rh),e(D,no),e(no,ih),e(D,lh),e(D,ho),e(ho,sh),e(D,nh),e(D,co),e(co,hh),e(D,dh),e(u,ch),e(u,st),mo=!0},p:tp,i(_){mo||(ap(ue.$$.fragment,_),mo=!0)},o(_){op(ue.$$.fragment,_),mo=!1},d(_){i(oe),i(fe),i(Ne),i(Qe),i(Be),i(He),i(Ve),_&&i(uo),rp(ue,_),_&&i(go),_&&i(w)}}}class Ep extends Jc{constructor(oe){super(),Yc(this,oe,null,vp,$c,{})}}export{Ep as default};
